{
  "address": "0xC5a5BAE7aC9cbCc1c3fB3Fb5EF9Afa854Eb56679",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "AdminRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "AdminRoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token2",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "InitLiquidityLauncher",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "LauncherCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "MinterRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "MinterRoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "OperatorRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "OperatorRoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SmartContractRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SmartContractRoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "WalletUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPERATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SMART_CONTRACT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addAdminRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addOperatorRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addSmartContractRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelLauncher",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositToken1",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositToken2",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLPBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLPTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_market",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_liquidityPercent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_locktime",
          "type": "uint256"
        }
      ],
      "name": "getLauncherInitData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken1Balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken2Balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "token1Amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "token2Amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasAdminRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasMinterRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasOperatorRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasSmartContractRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "initAccessControls",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_market",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_liquidityPercent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_locktime",
          "type": "uint256"
        }
      ],
      "name": "initAuctionLauncher",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "initLauncher",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "launcherInfo",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "locktime",
          "type": "uint32"
        },
        {
          "internalType": "uint64",
          "name": "unlock",
          "type": "uint64"
        },
        {
          "internalType": "uint16",
          "name": "liquidityPercent",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "launched",
          "type": "bool"
        },
        {
          "internalType": "uint128",
          "name": "liquidityAdded",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityTemplate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "market",
      "outputs": [
        {
          "internalType": "contract IMisoAuction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketConnected",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeAdminRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeOperatorRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeSmartContractRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "setWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token2",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDeposits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawLPTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa14295bf7c4717b706be0765c64b4a2e306629e71a219545d5fd8107e383f2a7",
  "receipt": {
    "to": null,
    "from": "0x5DB5bEdffa57dc3DcEF5D0201eD747E4BC114650",
    "contractAddress": "0xC5a5BAE7aC9cbCc1c3fB3Fb5EF9Afa854Eb56679",
    "transactionIndex": 1,
    "gasUsed": "3002664",
    "logsBloom": "0x
    "blockHash": "0x0c135f671ba38fbe66697210f12ce329278248319d3ace283817e05c3ff55abe",
    "transactionHash": "0xa14295bf7c4717b706be0765c64b4a2e306629e71a219545d5fd8107e383f2a7",
    "logs": [],
    "blockNumber": 11254469,
    "cumulativeGasUsed": "3125674",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc778417E063141139Fce010982780140Aa0cD5Ab"
  ],
  "solcInputHash": "1fb438077347298e0d57961a6b349fd4",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AdminRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AdminRoleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"InitLiquidityLauncher\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"LauncherCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MinterRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MinterRoleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"OperatorRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"OperatorRoleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SmartContractRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SmartContractRoleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"WalletUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SMART_CONTRACT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addOperatorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addSmartContractRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelLauncher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositToken1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositToken2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLPBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLPTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_locktime\",\"type\":\"uint256\"}],\"name\":\"getLauncherInitData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken1Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken2Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token2Amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasAdminRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasMinterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasOperatorRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasSmartContractRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"initAccessControls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_locktime\",\"type\":\"uint256\"}],\"name\":\"initAuctionLauncher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initLauncher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launcherInfo\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"locktime\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"unlock\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"liquidityPercent\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"launched\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"liquidityAdded\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityTemplate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"market\",\"outputs\":[{\"internalType\":\"contract IMisoAuction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketConnected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeOperatorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeSmartContractRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token2\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLPTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAdminRole(address)\":{\"details\":\"The sender must have the admin role.\",\"params\":{\"_address\":\"EOA or contract receiving the new role.\"}},\"addMinterRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract receiving the new role\"}},\"addOperatorRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract receiving the new role\"}},\"addSmartContractRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract receiving the new role\"}},\"depositToken1(uint256)\":{\"params\":{\"_amount\":\"Number of tokens to deposit.\"}},\"depositToken2(uint256)\":{\"params\":{\"_amount\":\"Number of tokens to deposit.\"}},\"finalize()\":{\"returns\":{\"liquidity\":\"Number of LPs.\"}},\"getLPBalance()\":{\"returns\":{\"_0\":\"uint256 LP Token balance.\"}},\"getLPTokenAddress()\":{\"returns\":{\"_0\":\"address LP address.\"}},\"getLauncherInitData(address,address,address,address,uint256,uint256)\":{\"params\":{\"_admin\":\"Contract owner address.\",\"_factory\":\"Uniswap V2 factory address.\",\"_liquidityPercent\":\"Percentage of payment currency sent to liquidity pool.\",\"_locktime\":\"How long the liquidity will be locked. Number of seconds.\",\"_market\":\"Auction address for launcher.\",\"_wallet\":\"Withdraw wallet address.\"},\"returns\":{\"_data\":\"All the data in bytes format.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getToken1Balance()\":{\"returns\":{\"_0\":\"uint256 Number of WETH.\"}},\"getToken2Balance()\":{\"returns\":{\"_0\":\"uint256 Number of WETH.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasAdminRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked.\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not.\"}},\"hasMinterRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not\"}},\"hasOperatorRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"hasSmartContractRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not\"}},\"init(bytes)\":{\"params\":{\"_data\":\"Encoded data for initialization.\"}},\"initAccessControls(address)\":{\"params\":{\"_admin\":\"Admins address.\"}},\"initAuctionLauncher(address,address,address,address,uint256,uint256)\":{\"params\":{\"_admin\":\"Contract owner address.\",\"_factory\":\"Uniswap V2 factory address.\",\"_liquidityPercent\":\"Percentage of payment currency sent to liquidity pool.\",\"_locktime\":\"How long the liquidity will be locked. Number of seconds.\",\"_market\":\"Auction address for launcher.\",\"_wallet\":\"Withdraw wallet address.\"}},\"removeAdminRole(address)\":{\"details\":\"The sender must have the admin role.\",\"params\":{\"_address\":\"EOA or contract affected.\"}},\"removeMinterRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract affected\"}},\"removeOperatorRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract affected\"}},\"removeSmartContractRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract affected\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setWallet(address)\":{\"params\":{\"_wallet\":\"Wallet is where funds will be sent.\"}},\"withdrawLPTokens()\":{\"returns\":{\"liquidity\":\"Number of LPs.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AdminRoleGranted(address,address)\":{\"notice\":\"Events for adding and removing various roles.\"},\"InitLiquidityLauncher(address,address,address,address)\":{\"notice\":\"Emitted when LP contract is initialised.\"},\"LauncherCancelled(address)\":{\"notice\":\"Emitted when launcher is cancelled.\"},\"LiquidityAdded(uint256)\":{\"notice\":\"Emitted when LP is launched.\"},\"MinterRoleGranted(address,address)\":{\"notice\":\"Events for adding and removing various roles\"},\"WalletUpdated(address)\":{\"notice\":\"Emitted when wallet is updated.\"}},\"kind\":\"user\",\"methods\":{\"MINTER_ROLE()\":{\"notice\":\"Role definitions\"},\"addAdminRole(address)\":{\"notice\":\"Grants the admin role to an address.\"},\"addMinterRole(address)\":{\"notice\":\"Grants the minter role to an address\"},\"addOperatorRole(address)\":{\"notice\":\"Grants the operator role to an address\"},\"addSmartContractRole(address)\":{\"notice\":\"Grants the smart contract role to an address\"},\"depositETH()\":{\"notice\":\"Deposits ETH to the contract.\"},\"depositToken1(uint256)\":{\"notice\":\"Deposits first Token to the contract.\"},\"depositToken2(uint256)\":{\"notice\":\"Deposits second Token to the contract.\"},\"factory()\":{\"notice\":\"Uniswap V2 factory address.\"},\"finalize()\":{\"notice\":\"Finalizes Token sale and launches LP.\"},\"getLPBalance()\":{\"notice\":\"Returns LP Token balance.\"},\"getLPTokenAddress()\":{\"notice\":\"Returns LP token address..\"},\"getLauncherInitData(address,address,address,address,uint256,uint256)\":{\"notice\":\"Collects data to initialize the auction and encodes them.\"},\"getToken1Balance()\":{\"notice\":\"Gets the number of first token deposited into this contract.\"},\"getToken2Balance()\":{\"notice\":\"Gets the number of second token deposited into this contract.\"},\"hasAdminRole(address)\":{\"notice\":\"Used to check whether an address has the admin role.\"},\"hasMinterRole(address)\":{\"notice\":\"Used to check whether an address has the minter role\"},\"hasOperatorRole(address)\":{\"notice\":\"Used to check whether an address has the operator role\"},\"hasSmartContractRole(address)\":{\"notice\":\"Used to check whether an address has the smart contract role\"},\"init(bytes)\":{\"notice\":\"Decodes and hands auction data to the initAuction function.\"},\"initAccessControls(address)\":{\"notice\":\"Initializes access controls.\"},\"initAuctionLauncher(address,address,address,address,uint256,uint256)\":{\"notice\":\"Initializes main contract variables (requires launchwindow to be more than 2 days.)\"},\"liquidityTemplate()\":{\"notice\":\"MISOLiquidity template id.\"},\"market()\":{\"notice\":\"Token market contract address.\"},\"marketConnected()\":{\"notice\":\"Checks if market wallet is set to this launcher\"},\"removeAdminRole(address)\":{\"notice\":\"Removes the admin role from an address.\"},\"removeMinterRole(address)\":{\"notice\":\"Removes the minter role from an address\"},\"removeOperatorRole(address)\":{\"notice\":\"Removes the operator role from an address\"},\"removeSmartContractRole(address)\":{\"notice\":\"Removes the smart contract role from an address\"},\"setWallet(address)\":{\"notice\":\"Admin can set the wallet through this function.\"},\"token1()\":{\"notice\":\"First Token address.\"},\"token2()\":{\"notice\":\"Second Token address.\"},\"tokenPair()\":{\"notice\":\"LP pair address.\"},\"wallet()\":{\"notice\":\"Withdraw wallet address.\"},\"withdrawDeposits()\":{\"notice\":\"Withraws deposited tokens and ETH from the contract to wallet.\"},\"withdrawLPTokens()\":{\"notice\":\"Withdraws LPs from the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liquidity/PostAuctionLauncher.sol\":\"PostAuctionLauncher\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Access/MISOAccessControls.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity 0.6.12;\\n\\nimport \\\"./MISOAdminAccess.sol\\\";\\n\\n/**\\n * @notice Access Controls\\n * @author Attr: BlockRocket.tech\\n */\\ncontract MISOAccessControls is MISOAdminAccess {\\n    /// @notice Role definitions\\n    bytes32 public constant MINTER_ROLE = keccak256(\\\"MINTER_ROLE\\\");\\n    bytes32 public constant SMART_CONTRACT_ROLE = keccak256(\\\"SMART_CONTRACT_ROLE\\\");\\n    bytes32 public constant OPERATOR_ROLE = keccak256(\\\"OPERATOR_ROLE\\\");\\n\\n    /// @notice Events for adding and removing various roles\\n\\n    event MinterRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event MinterRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event OperatorRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event OperatorRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event SmartContractRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event SmartContractRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    /**\\n     * @notice The deployer is automatically given the admin role which will allow them to then grant roles to other addresses\\n     */\\n    constructor() public {\\n    }\\n\\n\\n    /////////////\\n    // Lookups //\\n    /////////////\\n\\n    /**\\n     * @notice Used to check whether an address has the minter role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasMinterRole(address _address) public view returns (bool) {\\n        return hasRole(MINTER_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the smart contract role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasSmartContractRole(address _address) public view returns (bool) {\\n        return hasRole(SMART_CONTRACT_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the operator role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasOperatorRole(address _address) public view returns (bool) {\\n        return hasRole(OPERATOR_ROLE, _address);\\n    }\\n\\n    ///////////////\\n    // Modifiers //\\n    ///////////////\\n\\n    /**\\n     * @notice Grants the minter role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addMinterRole(address _address) external {\\n        grantRole(MINTER_ROLE, _address);\\n        emit MinterRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the minter role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeMinterRole(address _address) external {\\n        revokeRole(MINTER_ROLE, _address);\\n        emit MinterRoleRemoved(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Grants the smart contract role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addSmartContractRole(address _address) external {\\n        grantRole(SMART_CONTRACT_ROLE, _address);\\n        emit SmartContractRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the smart contract role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeSmartContractRole(address _address) external {\\n        revokeRole(SMART_CONTRACT_ROLE, _address);\\n        emit SmartContractRoleRemoved(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Grants the operator role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addOperatorRole(address _address) external {\\n        grantRole(OPERATOR_ROLE, _address);\\n        emit OperatorRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the operator role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeOperatorRole(address _address) external {\\n        revokeRole(OPERATOR_ROLE, _address);\\n        emit OperatorRoleRemoved(_address, _msgSender());\\n    }\\n\\n}\\n\",\"keccak256\":\"0xdb3765654240248cec4a2e8bb2cd33164dbdd631118833eea52bd6199cc39c13\",\"license\":\"GPL-3.0-only\"},\"contracts/Access/MISOAdminAccess.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity 0.6.12;\\n\\nimport \\\"../OpenZeppelin/access/AccessControl.sol\\\";\\n\\n\\ncontract MISOAdminAccess is AccessControl {\\n\\n    /// @dev Whether access is initialised.\\n    bool private initAccess;\\n\\n    /// @notice Events for adding and removing various roles.\\n    event AdminRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event AdminRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n\\n    /// @notice The deployer is automatically given the admin role which will allow them to then grant roles to other addresses.\\n    constructor() public {\\n    }\\n\\n    /**\\n     * @notice Initializes access controls.\\n     * @param _admin Admins address.\\n     */\\n    function initAccessControls(address _admin) public {\\n        require(!initAccess, \\\"Already initialised\\\");\\n        require(_admin != address(0), \\\"Incorrect input\\\");\\n        _setupRole(DEFAULT_ADMIN_ROLE, _admin);\\n        initAccess = true;\\n    }\\n\\n    /////////////\\n    // Lookups //\\n    /////////////\\n\\n    /**\\n     * @notice Used to check whether an address has the admin role.\\n     * @param _address EOA or contract being checked.\\n     * @return bool True if the account has the role or false if it does not.\\n     */\\n    function hasAdminRole(address _address) public  view returns (bool) {\\n        return hasRole(DEFAULT_ADMIN_ROLE, _address);\\n    }\\n\\n    ///////////////\\n    // Modifiers //\\n    ///////////////\\n\\n    /**\\n     * @notice Grants the admin role to an address.\\n     * @dev The sender must have the admin role.\\n     * @param _address EOA or contract receiving the new role.\\n     */\\n    function addAdminRole(address _address) external {\\n        grantRole(DEFAULT_ADMIN_ROLE, _address);\\n        emit AdminRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the admin role from an address.\\n     * @dev The sender must have the admin role.\\n     * @param _address EOA or contract affected.\\n     */\\n    function removeAdminRole(address _address) external {\\n        revokeRole(DEFAULT_ADMIN_ROLE, _address);\\n        emit AdminRoleRemoved(_address, _msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x90b919dd0f8bb50174e958858fe7d025e6b9a096ca5aa5516f812342af398262\",\"license\":\"GPL-3.0-only\"},\"contracts/Liquidity/PostAuctionLauncher.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\n\\n//----------------------------------------------------------------------------------\\n//    I n s t a n t\\n//\\n//        .:mmm.         .:mmm:.       .ii.  .:SSSSSSSSSSSSS.     .oOOOOOOOOOOOo.\\n//      .mMM'':Mm.     .:MM'':Mm:.     .II:  :SSs..........     .oOO'''''''''''OOo.\\n//    .:Mm'   ':Mm.   .:Mm'   'MM:.    .II:  'sSSSSSSSSSSSSS:.  :OO.           .OO:\\n//  .'mMm'     ':MM:.:MMm'     ':MM:.  .II:  .:...........:SS.  'OOo:.........:oOO'\\n//  'mMm'        ':MMmm'         'mMm:  II:  'sSSSSSSSSSSSSS'     'oOOOOOOOOOOOO'\\n//\\n//----------------------------------------------------------------------------------\\n//\\n// Chef Gonpachi's Post Auction Launcher\\n//\\n// A post auction contract that takes the proceeds and creates a liquidity pool\\n//\\n// \\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License\\n//\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n//\\n// The above copyright notice and this permission notice shall be included \\n// in all copies or substantial portions of the Software.\\n//\\n// Made for Sushi.com \\n// \\n// Enjoy. (c) Chef Gonpachi\\n// <https://github.com/chefgonpachi/MISO/>\\n//\\n// ---------------------------------------------------------------------\\n// SPDX-License-Identifier: GPL-3.0                        \\n// ---------------------------------------------------------------------\\n\\nimport \\\"../OpenZeppelin/utils/ReentrancyGuard.sol\\\";\\nimport \\\"../Access/MISOAccessControls.sol\\\";\\nimport \\\"../Utils/SafeTransfer.sol\\\";\\nimport \\\"../Utils/BoringMath.sol\\\";\\nimport \\\"../UniswapV2/UniswapV2Library.sol\\\";\\nimport \\\"../UniswapV2/interfaces/IUniswapV2Pair.sol\\\";\\nimport \\\"../UniswapV2/interfaces/IUniswapV2Factory.sol\\\";\\nimport \\\"../interfaces/IWETH9.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../interfaces/IMisoAuction.sol\\\";\\n\\n\\n\\ncontract PostAuctionLauncher is MISOAccessControls, SafeTransfer, ReentrancyGuard {\\n    using BoringMath for uint256;\\n    using BoringMath128 for uint128;\\n    using BoringMath64 for uint64;\\n    using BoringMath32 for uint32;\\n    using BoringMath16 for uint16;\\n\\n\\n    address private constant ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n    uint256 private constant LIQUIDITY_PRECISION = 10000;\\n    \\n    /// @notice MISOLiquidity template id.\\n    uint256 public constant liquidityTemplate = 3;\\n\\n    /// @notice First Token address.\\n    IERC20 public token1;\\n    /// @notice Second Token address.\\n    IERC20 public token2;\\n    /// @notice Uniswap V2 factory address.\\n    IUniswapV2Factory public factory;\\n    /// @notice WETH contract address.\\n    address private immutable weth;\\n\\n\\n    /// @notice LP pair address.\\n    address public tokenPair;\\n    /// @notice Withdraw wallet address.\\n    address public wallet;\\n    /// @notice Token market contract address.\\n    IMisoAuction public market;\\n\\n    struct LauncherInfo {\\n        uint32 locktime;\\n        uint64 unlock;\\n        uint16 liquidityPercent;\\n        bool launched;\\n        uint128 liquidityAdded;\\n    }\\n    LauncherInfo public launcherInfo;\\n\\n    /// @notice Emitted when LP contract is initialised.\\n    event InitLiquidityLauncher(address indexed token1, address indexed token2, address factory, address sender);\\n    /// @notice Emitted when LP is launched.\\n    event LiquidityAdded(uint256 liquidity);\\n    /// @notice Emitted when wallet is updated.\\n    event WalletUpdated(address indexed wallet);\\n    /// @notice Emitted when launcher is cancelled.\\n    event LauncherCancelled(address indexed wallet);\\n\\n    constructor (address _weth) public {\\n        weth = _weth;\\n    }\\n\\n\\n    /**\\n     * @notice Initializes main contract variables (requires launchwindow to be more than 2 days.)\\n     * @param _market Auction address for launcher.\\n     * @param _factory Uniswap V2 factory address.\\n     * @param _admin Contract owner address.\\n     * @param _wallet Withdraw wallet address.\\n     * @param _liquidityPercent Percentage of payment currency sent to liquidity pool.\\n     * @param _locktime How long the liquidity will be locked. Number of seconds.\\n     */\\n    function initAuctionLauncher(\\n            address _market,\\n            address _factory,\\n            address _admin,\\n            address _wallet,\\n            uint256 _liquidityPercent,\\n            uint256 _locktime\\n    )\\n        public\\n    {\\n        require(_locktime < 10000000000, 'PostAuction: Enter an unix timestamp in seconds, not miliseconds');\\n        require(_liquidityPercent <= LIQUIDITY_PRECISION, 'PostAuction: Liquidity percentage greater than 100.00% (>10000)');\\n        require(_liquidityPercent > 0, 'PostAuction: Liquidity percentage equals zero');\\n        require(_admin != address(0), \\\"PostAuction: admin is the zero address\\\");\\n        require(_wallet != address(0), \\\"PostAuction: wallet is the zero address\\\");\\n\\n        initAccessControls(_admin);\\n\\n        market = IMisoAuction(_market);\\n        token1 = IERC20(market.paymentCurrency());\\n        token2 = IERC20(market.auctionToken());\\n\\n        if (address(token1) == ETH_ADDRESS) {\\n            token1 = IERC20(weth);\\n        }\\n\\n        uint256 d1 = uint256(token1.decimals());\\n        uint256 d2 = uint256(token2.decimals());\\n        require(d2 >= d1);\\n\\n        factory = IUniswapV2Factory(_factory);\\n        bytes32 pairCodeHash = IUniswapV2Factory(_factory).pairCodeHash();\\n        tokenPair = UniswapV2Library.pairFor(_factory, address(token1), address(token2), pairCodeHash);\\n   \\n        wallet = _wallet;\\n        launcherInfo.liquidityPercent = BoringMath.to16(_liquidityPercent);\\n        launcherInfo.locktime = BoringMath.to32(_locktime);\\n\\n        uint256 initalTokenAmount = market.getTotalTokens().mul(_liquidityPercent).div(LIQUIDITY_PRECISION);\\n        _safeTransferFrom(address(token2), msg.sender, initalTokenAmount);\\n\\n        emit InitLiquidityLauncher(address(token1), address(token2), address(_factory), _admin);\\n    }\\n\\n    receive() external payable {\\n        if(msg.sender != weth ){\\n             depositETH();\\n        }\\n    }\\n\\n    /// @notice Deposits ETH to the contract.\\n    function depositETH() public payable {\\n        require(address(token1) == weth || address(token2) == weth, \\\"PostAuction: Launcher not accepting ETH\\\");\\n        if (msg.value > 0 ) {\\n            IWETH(weth).deposit{value : msg.value}();\\n        }\\n    }\\n\\n    /**\\n     * @notice Deposits first Token to the contract.\\n     * @param _amount Number of tokens to deposit.\\n     */\\n    function depositToken1(uint256 _amount) external returns (bool success) {\\n        return _deposit( address(token1), msg.sender, _amount);\\n    }\\n\\n    /**\\n     * @notice Deposits second Token to the contract.\\n     * @param _amount Number of tokens to deposit.\\n     */\\n    function depositToken2(uint256 _amount) external returns (bool success) {\\n        return _deposit( address(token2), msg.sender, _amount);\\n    }\\n\\n    /**\\n     * @notice Deposits Tokens to the contract.\\n     * @param _amount Number of tokens to deposit.\\n     * @param _from Where the tokens to deposit will come from.\\n     * @param _token Token address.\\n     */\\n    function _deposit(address _token, address _from, uint _amount) internal returns (bool success) {\\n        require(!launcherInfo.launched, \\\"PostAuction: Must first launch liquidity\\\");\\n        require(launcherInfo.liquidityAdded == 0, \\\"PostAuction: Liquidity already added\\\");\\n\\n        require(_amount > 0, \\\"PostAuction: Token amount must be greater than 0\\\");\\n        _safeTransferFrom(_token, _from, _amount);\\n        return true;\\n    }\\n\\n\\n    /**\\n     * @notice Checks if market wallet is set to this launcher\\n     */\\n    function marketConnected() public view returns (bool)  {\\n        return market.wallet() == address(this);\\n    }\\n\\n    /**\\n     * @notice Finalizes Token sale and launches LP.\\n     * @return liquidity Number of LPs.\\n     */\\n    function finalize() external nonReentrant returns (uint256 liquidity) {\\n        // GP: Can we remove admin, let anyone can finalise and launch?\\n        // require(hasAdminRole(msg.sender) || hasOperatorRole(msg.sender), \\\"PostAuction: Sender must be operator\\\");\\n        require(marketConnected(), \\\"PostAuction: Auction must have this launcher address set as the destination wallet\\\");\\n        require(!launcherInfo.launched);\\n\\n        if (!market.finalized()) {\\n            market.finalize();\\n        }\\n\\n        launcherInfo.launched = true;\\n        if (!market.auctionSuccessful() ) {\\n            return 0;\\n        }\\n\\n        /// @dev if the auction is settled in weth, wrap any contract balance \\n        uint256 launcherBalance = address(this).balance;\\n        if (launcherBalance > 0 ) {\\n            IWETH(weth).deposit{value : launcherBalance}();\\n        }\\n        \\n        (uint256 token1Amount, uint256 token2Amount) =  getTokenAmounts();\\n\\n        /// @dev cannot start a liquidity pool with no tokens on either side\\n        if (token1Amount == 0 || token2Amount == 0 ) {\\n            return 0;\\n        }\\n\\n        address pair = factory.getPair(address(token1), address(token2));\\n        require(pair == address(0) || getLPBalance() == 0, \\\"PostLiquidity: Pair not new\\\");\\n        if(pair == address(0)) {\\n            createPool();\\n        }\\n\\n        /// @dev add liquidity to pool via the pair directly\\n        _safeTransfer(address(token1), tokenPair, token1Amount);\\n        _safeTransfer(address(token2), tokenPair, token2Amount);\\n        liquidity = IUniswapV2Pair(tokenPair).mint(address(this));\\n        launcherInfo.liquidityAdded = BoringMath.to128(uint256(launcherInfo.liquidityAdded).add(liquidity));\\n\\n        /// @dev if unlock time not yet set, add it.\\n        if (launcherInfo.unlock == 0 ) {\\n            launcherInfo.unlock = BoringMath.to64(block.timestamp + uint256(launcherInfo.locktime));\\n        }\\n        emit LiquidityAdded(liquidity);\\n    }\\n\\n\\n    function getTokenAmounts() public view returns (uint256 token1Amount, uint256 token2Amount) {\\n        token1Amount = getToken1Balance().mul(uint256(launcherInfo.liquidityPercent)).div(LIQUIDITY_PRECISION);\\n        token2Amount = getToken2Balance(); \\n\\n        uint256 tokenPrice = market.tokenPrice();  \\n        uint256 d2 = uint256(token2.decimals());\\n        uint256 maxToken1Amount = token2Amount.mul(tokenPrice).div(10**(d2));\\n        uint256 maxToken2Amount = token1Amount\\n                                    .mul(10**(d2))\\n                                    .div(tokenPrice);\\n\\n        /// @dev if more than the max.\\n        if (token2Amount > maxToken2Amount) {\\n            token2Amount =  maxToken2Amount;\\n        } \\n        /// @dev if more than the max.\\n        if (token1Amount > maxToken1Amount) {\\n            token1Amount =  maxToken1Amount;\\n        }\\n\\n    }\\n\\n    /**\\n     * @notice Withdraws LPs from the contract.\\n     * @return liquidity Number of LPs.\\n     */\\n    function withdrawLPTokens() external returns (uint256 liquidity) {\\n        require(hasAdminRole(msg.sender) || hasOperatorRole(msg.sender), \\\"PostAuction: Sender must be operator\\\");\\n        require(launcherInfo.launched, \\\"PostAuction: Must first launch liquidity\\\");\\n        require(block.timestamp >= uint256(launcherInfo.unlock), \\\"PostAuction: Liquidity is locked\\\");\\n        liquidity = IERC20(tokenPair).balanceOf(address(this));\\n        require(liquidity > 0, \\\"PostAuction: Liquidity must be greater than 0\\\");\\n        _safeTransfer(tokenPair, wallet, liquidity);\\n    }\\n\\n    /// @notice Withraws deposited tokens and ETH from the contract to wallet.\\n    function withdrawDeposits() external {\\n        require(hasAdminRole(msg.sender) || hasOperatorRole(msg.sender), \\\"PostAuction: Sender must be operator\\\");\\n        require(launcherInfo.launched, \\\"PostAuction: Must first launch liquidity\\\");\\n\\n        uint256 token1Amount = getToken1Balance();\\n        if (token1Amount > 0 ) {\\n            _safeTransfer(address(token1), wallet, token1Amount);\\n        }\\n        uint256 token2Amount = getToken2Balance();\\n        if (token2Amount > 0 ) {\\n            _safeTransfer(address(token2), wallet, token2Amount);\\n        }\\n    }\\n\\n    // TODO     \\n    // GP: Sweep non relevant ERC20s / ETH\\n\\n\\n    //--------------------------------------------------------\\n    // Setter functions\\n    //--------------------------------------------------------\\n\\n\\n    /**\\n     * @notice Admin can set the wallet through this function.\\n     * @param _wallet Wallet is where funds will be sent.\\n     */\\n    function setWallet(address payable _wallet) external {\\n        require(hasAdminRole(msg.sender));\\n        require(_wallet != address(0), \\\"Wallet is the zero address\\\");\\n\\n        wallet = _wallet;\\n\\n        emit WalletUpdated(_wallet);\\n    }\\n\\n    function cancelLauncher() external {\\n        require(hasAdminRole(msg.sender));\\n        require(!launcherInfo.launched);\\n\\n        launcherInfo.launched = true;\\n        emit LauncherCancelled(msg.sender);\\n\\n    }\\n\\n    //--------------------------------------------------------\\n    // Helper functions\\n    //--------------------------------------------------------\\n\\n    /**\\n     * @notice Creates new SLP pair through SushiSwap.\\n     */\\n    function createPool() internal {\\n        factory.createPair(address(token1), address(token2));\\n    }\\n\\n    //--------------------------------------------------------\\n    // Getter functions\\n    //--------------------------------------------------------\\n\\n    /**\\n     * @notice Gets the number of first token deposited into this contract.\\n     * @return uint256 Number of WETH.\\n     */\\n    function getToken1Balance() public view returns (uint256) {\\n         return token1.balanceOf(address(this));\\n    }\\n\\n    /**\\n     * @notice Gets the number of second token deposited into this contract.\\n     * @return uint256 Number of WETH.\\n     */\\n    function getToken2Balance() public view returns (uint256) {\\n         return token2.balanceOf(address(this));\\n    }\\n\\n    /**\\n     * @notice Returns LP token address..\\n     * @return address LP address.\\n     */\\n    function getLPTokenAddress() public view returns (address) {\\n        return tokenPair;\\n    }\\n    /**\\n     * @notice Returns LP Token balance.\\n     * @return uint256 LP Token balance.\\n     */\\n    function getLPBalance() public view returns (uint256) {\\n         return IERC20(tokenPair).balanceOf(address(this));\\n    }\\n\\n\\n    //--------------------------------------------------------\\n    // Init functions\\n    //--------------------------------------------------------\\n\\n\\n    /**\\n     * @notice Decodes and hands auction data to the initAuction function.\\n     * @param _data Encoded data for initialization.\\n     */\\n\\n    function init(bytes calldata _data) external payable {\\n\\n    }\\n\\n    function initLauncher(\\n        bytes calldata _data\\n    ) public {\\n        (\\n            address _market,\\n            address _factory,\\n            address _admin,\\n            address _wallet,\\n            uint256 _liquidityPercent,\\n            uint256 _locktime\\n        ) = abi.decode(_data, (\\n            address,\\n            address,\\n            address,\\n            address,\\n            uint256,\\n            uint256\\n        ));\\n        initAuctionLauncher( _market, _factory,_admin,_wallet,_liquidityPercent,_locktime);\\n    }\\n\\n    /**\\n     * @notice Collects data to initialize the auction and encodes them.\\n     * @param _market Auction address for launcher.\\n     * @param _factory Uniswap V2 factory address.\\n     * @param _admin Contract owner address.\\n     * @param _wallet Withdraw wallet address.\\n     * @param _liquidityPercent Percentage of payment currency sent to liquidity pool.\\n     * @param _locktime How long the liquidity will be locked. Number of seconds.\\n     * @return _data All the data in bytes format.\\n     */\\n    function getLauncherInitData(\\n            address _market,\\n            address _factory,\\n            address _admin,\\n            address _wallet,\\n            uint256 _liquidityPercent,\\n            uint256 _locktime\\n    )\\n        external \\n        pure\\n        returns (bytes memory _data)\\n    {\\n            return abi.encode(_market,\\n                                _factory,\\n                                _admin,\\n                                _wallet,\\n                                _liquidityPercent,\\n                                _locktime\\n            );\\n    }\\n\\n}\\n\",\"keccak256\":\"0xff4a574b35e7e8e8e28a3e4114177bb9c57d0fef8a154335ae89b545fd84c9b1\",\"license\":\"GPL-3.0\"},\"contracts/OpenZeppelin/access/AccessControl.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\nimport \\\"../utils/EnumerableSet.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    struct RoleData {\\n        EnumerableSet.AddressSet members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping (bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members.contains(account);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\\n        return _roles[role].members.length();\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\\n        return _roles[role].members.at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to grant\\\");\\n\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to revoke\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\\n        _roles[role].adminRole = adminRole;\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (_roles[role].members.add(account)) {\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (_roles[role].members.remove(account)) {\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6711f5cfe992294baa43dd8d1d39f2caa1f62761d65abeb3f2a405833da794f2\"},\"contracts/OpenZeppelin/utils/Context.sol\":{\"content\":\"\\n\\npragma solidity 0.6.12;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x408ed1e8d180f17597080e993fea24a26ec262dd56ee20dfbdcf511d261387d4\"},\"contracts/OpenZeppelin/utils/EnumerableSet.sol\":{\"content\":\"\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\\n\",\"keccak256\":\"0x7a5437ee09401a3d1ec98f126470362f9848afbf521510d6bfae61d7b42a8fb7\"},\"contracts/OpenZeppelin/utils/ReentrancyGuard.sol\":{\"content\":\"\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xc203b23d101e6b66d736afccf9ac249811dbed15bc27c2d4c2856f9a9ecba2a3\"},\"contracts/UniswapV2/UniswapV2Library.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\nimport './interfaces/IUniswapV2Pair.sol';\\n\\nimport \\\"./libraries/SafeMath.sol\\\";\\n\\nlibrary UniswapV2Library {\\n    using SafeMathUniswap for uint;\\n\\n    // returns sorted token addresses, used to handle return values from pairs sorted in this order\\n    function sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1) {\\n        require(tokenA != tokenB, 'UniswapV2Library: IDENTICAL_ADDRESSES');\\n        (token0, token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\\n        require(token0 != address(0), 'UniswapV2Library: ZERO_ADDRESS');\\n    }\\n\\n    // calculates the CREATE2 address for a pair without making any external calls\\n    function pairFor(address factory, address tokenA, address tokenB, bytes32 pairCodeHash) internal pure returns (address pair) {\\n        (address token0, address token1) = sortTokens(tokenA, tokenB);\\n        pair = address(uint(keccak256(abi.encodePacked(\\n                hex'ff',\\n                factory,\\n                keccak256(abi.encodePacked(token0, token1)),\\n                pairCodeHash // init code hash\\n            ))));\\n    }\\n\\n    // fetches and sorts the reserves for a pair\\n    function getReserves(address factory, address tokenA, address tokenB, bytes32 pairCodeHash) internal view returns (uint reserveA, uint reserveB) {\\n        (address token0,) = sortTokens(tokenA, tokenB);\\n        (uint reserve0, uint reserve1,) = IUniswapV2Pair(pairFor(factory, tokenA, tokenB, pairCodeHash)).getReserves();\\n        (reserveA, reserveB) = tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0);\\n    }\\n\\n    // given some amount of an asset and pair reserves, returns an equivalent amount of the other asset\\n    function quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB) {\\n        require(amountA > 0, 'UniswapV2Library: INSUFFICIENT_AMOUNT');\\n        require(reserveA > 0 && reserveB > 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY');\\n        amountB = amountA.mul(reserveB) / reserveA;\\n    }\\n\\n    // given an input amount of an asset and pair reserves, returns the maximum output amount of the other asset\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut) {\\n        require(amountIn > 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT');\\n        require(reserveIn > 0 && reserveOut > 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY');\\n        uint amountInWithFee = amountIn.mul(997);\\n        uint numerator = amountInWithFee.mul(reserveOut);\\n        uint denominator = reserveIn.mul(1000).add(amountInWithFee);\\n        amountOut = numerator / denominator;\\n    }\\n\\n    // given an output amount of an asset and pair reserves, returns a required input amount of the other asset\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) internal pure returns (uint amountIn) {\\n        require(amountOut > 0, 'UniswapV2Library: INSUFFICIENT_OUTPUT_AMOUNT');\\n        require(reserveIn > 0 && reserveOut > 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY');\\n        uint numerator = reserveIn.mul(amountOut).mul(1000);\\n        uint denominator = reserveOut.sub(amountOut).mul(997);\\n        amountIn = (numerator / denominator).add(1);\\n    }\\n\\n    // performs chained getAmountOut calculations on any number of pairs\\n    function getAmountsOut(address factory, uint amountIn, address[] memory path, bytes32 pairCodeHash) internal view returns (uint[] memory amounts) {\\n        require(path.length >= 2, 'UniswapV2Library: INVALID_PATH');\\n        amounts = new uint[](path.length);\\n        amounts[0] = amountIn;\\n        for (uint i; i < path.length - 1; i++) {\\n            (uint reserveIn, uint reserveOut) = getReserves(factory, path[i], path[i + 1], pairCodeHash);\\n            amounts[i + 1] = getAmountOut(amounts[i], reserveIn, reserveOut);\\n        }\\n    }\\n\\n    // performs chained getAmountIn calculations on any number of pairs\\n    function getAmountsIn(address factory, uint amountOut, address[] memory path, bytes32 pairCodeHash) internal view returns (uint[] memory amounts) {\\n        require(path.length >= 2, 'UniswapV2Library: INVALID_PATH');\\n        amounts = new uint[](path.length);\\n        amounts[amounts.length - 1] = amountOut;\\n        for (uint i = path.length - 1; i > 0; i--) {\\n            (uint reserveIn, uint reserveOut) = getReserves(factory, path[i - 1], path[i], pairCodeHash);\\n            amounts[i - 1] = getAmountIn(amounts[i], reserveIn, reserveOut);\\n        }\\n    }\\n}\",\"keccak256\":\"0xc0b271a3d8b6e71587dc45dd12975cab7acd22ddebfb216592f7a4da6ed0e408\"},\"contracts/UniswapV2/interfaces/IUniswapV2Factory.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n    function migrator() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function pairCodeHash() external pure returns (bytes32);\\n\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n    function setMigrator(address) external;\\n}\\n\",\"keccak256\":\"0xafba0f96349bca399fbeb37e3c9999275edea5d9d215e41b4995c13b8fdde4ad\"},\"contracts/UniswapV2/interfaces/IUniswapV2Pair.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\",\"keccak256\":\"0xbf217e8d2f87f5be99608df920bfc6b0e558a6a43251d6d676242f65c770b4bc\"},\"contracts/UniswapV2/libraries/SafeMath.sol\":{\"content\":\"pragma solidity =0.6.12;\\n\\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\\n\\nlibrary SafeMathUniswap {\\n    function add(uint x, uint y) internal pure returns (uint z) {\\n        require((z = x + y) >= x, 'ds-math-add-overflow');\\n    }\\n\\n    function sub(uint x, uint y) internal pure returns (uint z) {\\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\\n    }\\n\\n    function mul(uint x, uint y) internal pure returns (uint z) {\\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\\n    }\\n}\\n\",\"keccak256\":\"0xe3b1e8248b16becd24db75913332ff35b919c73b5ffc5e3de72630119704acd2\"},\"contracts/Utils/BoringMath.sol\":{\"content\":\"\\npragma solidity 0.6.12;\\n\\n/// @notice A library for performing overflow-/underflow-safe math,\\n/// updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\\nlibrary BoringMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require(b > 0, \\\"BoringMath: Div zero\\\");\\n        c = a / b;\\n    }\\n\\n    function to128(uint256 a) internal pure returns (uint128 c) {\\n        require(a <= uint128(-1), \\\"BoringMath: uint128 Overflow\\\");\\n        c = uint128(a);\\n    }\\n\\n    function to64(uint256 a) internal pure returns (uint64 c) {\\n        require(a <= uint64(-1), \\\"BoringMath: uint64 Overflow\\\");\\n        c = uint64(a);\\n    }\\n\\n    function to32(uint256 a) internal pure returns (uint32 c) {\\n        require(a <= uint32(-1), \\\"BoringMath: uint32 Overflow\\\");\\n        c = uint32(a);\\n    }\\n\\n    function to16(uint256 a) internal pure returns (uint16 c) {\\n        require(a <= uint16(-1), \\\"BoringMath: uint16 Overflow\\\");\\n        c = uint16(a);\\n    }\\n\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n    function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n    function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n    function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath16 {\\n    function add(uint16 a, uint16 b) internal pure returns (uint16 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint16 a, uint16 b) internal pure returns (uint16 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\",\"keccak256\":\"0x5421027155bdde5de1c6cb4d3197b6534464fd2c89b7eec84ce6c09f6c22b2b5\"},\"contracts/Utils/SafeTransfer.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ncontract SafeTransfer {\\n\\n    address private constant ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    /// @dev Helper function to handle both ETH and ERC20 payments\\n    function _safeTokenPayment(\\n        address _token,\\n        address payable _to,\\n        uint256 _amount\\n    ) internal {\\n        if (address(_token) == ETH_ADDRESS) {\\n            _safeTransferETH(_to,_amount );\\n        } else {\\n            _safeTransfer(_token, _to, _amount);\\n        }\\n    }\\n\\n\\n    /// @dev Helper function to handle both ETH and ERC20 payments\\n    function _tokenPayment(\\n        address _token,\\n        address payable _to,\\n        uint256 _amount\\n    ) internal {\\n        if (address(_token) == ETH_ADDRESS) {\\n            _to.transfer(_amount);\\n        } else {\\n            _safeTransfer(_token, _to, _amount);\\n        }\\n    }\\n\\n\\n    /// @dev Transfer helper from UniswapV2 Router\\n    function _safeApprove(address token, address to, uint value) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');\\n    }\\n\\n\\n    /**\\n     * There are many non-compliant ERC20 tokens... this can handle most, adapted from UniSwap V2\\n     * Im trying to make it a habit to put external calls last (reentrancy)\\n     * You can put this in an internal function if you like.\\n     */\\n    function _safeTransfer(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        // solium-disable-next-line security/no-low-level-calls\\n        (bool success, bytes memory data) =\\n            token.call(\\n                // 0xa9059cbb = bytes4(keccak256(\\\"transfer(address,uint256)\\\"))\\n                abi.encodeWithSelector(0xa9059cbb, to, amount)\\n            );\\n        require(success && (data.length == 0 || abi.decode(data, (bool)))); // ERC20 Transfer failed\\n    }\\n\\n    function _safeTransferFrom(\\n        address token,\\n        address from,\\n        uint256 amount\\n    ) internal virtual {\\n        // solium-disable-next-line security/no-low-level-calls\\n        (bool success, bytes memory data) =\\n            token.call(\\n                // 0x23b872dd = bytes4(keccak256(\\\"transferFrom(address,address,uint256)\\\"))\\n                abi.encodeWithSelector(0x23b872dd, from, address(this), amount)\\n            );\\n        require(success && (data.length == 0 || abi.decode(data, (bool)))); // ERC20 TransferFrom failed\\n    }\\n\\n    function _safeTransferFrom(address token, address from, address to, uint value) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\\n    }\\n\\n    function _safeTransferETH(address to, uint value) internal {\\n        (bool success,) = to.call{value:value}(new bytes(0));\\n        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\\n    }\\n\\n\\n}\\n\",\"keccak256\":\"0xc2af6cb1d93e3358de826e42b24bb2f108855b1b17d3f40d3da285c1e52e6bd1\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\",\"keccak256\":\"0x9e3da3bb9ec7a825414952ac7fdae2133f873608d059cb40e03ac0194cf1ca40\"},\"contracts/interfaces/IMisoAuction.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ninterface IMisoAuction {\\n\\n\\n    function initAuction(\\n        address _funder,\\n        address _token,\\n        uint256 _tokenSupply,\\n        uint256 _startDate,\\n        uint256 _endDate,\\n        address _paymentCurrency,\\n        uint256 _startPrice,\\n        uint256 _minimumPrice,\\n        address _operator,\\n        address _pointList,\\n        address payable _wallet\\n    ) external;\\n    function auctionSuccessful() external view returns (bool);\\n    function finalized() external view returns (bool);\\n    function wallet() external view returns (address);\\n    function paymentCurrency() external view returns (address);\\n    function auctionToken() external view returns (address);\\n\\n    function finalize() external;\\n    function tokenPrice() external view returns (uint256);\\n    function getTotalTokens() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x84a32b55fa269359fddfab489832bf3776757fd77e963b2de41fe224344fd0b9\"},\"contracts/interfaces/IWETH9.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    function deposit() external payable;\\n    function withdraw(uint) external;\\n    function transfer(address, uint) external returns (bool);\\n\\n}\",\"keccak256\":\"0x93b727e2ad1715695f861c9ae0b0fb11f3efa20204b68e8952c8c983dbe0f96b\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161357b38038061357b8339818101604052602081101561003357600080fd5b50516001600255606081901b6001600160601b0319166080526001600160a01b03166134f6610085600039806102dd5280610c265280610c5e5280610ccf5280611051528061176452506134f66000f3fe6080604052600436106102cd5760003560e01c80639010d07c11610175578063d5391393116100dc578063edf8bc1311610095578063f6326fb31161006f578063f6326fb314610b56578063f82fc8ce14610b5e578063fc4e3e0a14610bd9578063fc62485a14610c0c5761030c565b8063edf8bc1314610b17578063ee16c16014610b2c578063f5b541a614610b415761030c565b8063d539139314610a02578063d547741f14610a17578063d73cc4df14610a50578063dccfe31014610a7e578063deaa59df14610ab1578063e6594abd14610ae45761030c565b8063c395fcb31161012e578063c395fcb314610951578063c45a015514610984578063c9d41a4014610999578063c9e57aa6146109ae578063ca15c873146109c3578063d21220a7146109ed5761030c565b80639010d07c1461083a57806391d148541461086a5780639478941c146108a3578063a217fddf146108d6578063adbf3776146108eb578063b7928b1d1461091e5761030c565b8063521eb273116102345780637cf2ed22116101ed57806380f55605116101c757806380f55605146107c85780638566de4b146107dd578063857d2608146107f25780638a845fc0146108075761030c565b80637cf2ed22146107405780637f4f577d14610755578063801ea6ec146107b35761030c565b8063521eb2731461065c57806354f1e126146106715780636595171c146106a457806368b84b72146106d75780636f43f17b1461070157806371210a0d146107165761030c565b806336568abe1161028657806336568abe1461048a5780633f16431a146104c35780634422c3a1146104f65780634bb278f3146105c45780634ddf47d4146105d95780635153786b146106475761030c565b8063099db01714610311578063113b0ab214610358578063248a9ca31461038b57806325be124e146103c75780632dd7131a146103f85780632f2ff15d146104515761030c565b3661030c57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461030a5761030a610c21565b005b600080fd5b34801561031d57600080fd5b506103446004803603602081101561033457600080fd5b50356001600160a01b0316610d44565b604080519115158252519081900360200190f35b34801561036457600080fd5b506103446004803603602081101561037b57600080fd5b50356001600160a01b0316610d64565b34801561039757600080fd5b506103b5600480360360208110156103ae57600080fd5b5035610d7e565b60408051918252519081900360200190f35b3480156103d357600080fd5b506103dc610d93565b604080516001600160a01b039092168252519081900360200190f35b34801561040457600080fd5b5061030a600480360360c081101561041b57600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060808101359060a00135610da2565b34801561045d57600080fd5b5061030a6004803603604081101561047457600080fd5b50803590602001356001600160a01b03166113ad565b34801561049657600080fd5b5061030a600480360360408110156104ad57600080fd5b50803590602001356001600160a01b0316611419565b3480156104cf57600080fd5b5061030a600480360360208110156104e657600080fd5b50356001600160a01b031661147a565b34801561050257600080fd5b5061054f600480360360c081101561051957600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060808101359060a001356114dc565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610589578181015183820152602001610571565b50505050905090810190601f1680156105b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105d057600080fd5b506103b561152d565b61030a600480360360208110156105ef57600080fd5b810190602081018135600160201b81111561060957600080fd5b82018360208201111561061b57600080fd5b803590602001918460018302840111600160201b8311171561063c57600080fd5b509092509050611415565b34801561065357600080fd5b506103b5611ac0565b34801561066857600080fd5b506103dc611b3d565b34801561067d57600080fd5b5061030a6004803603602081101561069457600080fd5b50356001600160a01b0316611b4c565b3480156106b057600080fd5b5061030a600480360360208110156106c757600080fd5b50356001600160a01b0316611bae565b3480156106e357600080fd5b50610344600480360360208110156106fa57600080fd5b5035611c03565b34801561070d57600080fd5b506103b5611c1d565b34801561072257600080fd5b506103446004803603602081101561073957600080fd5b5035611c68565b34801561074c57600080fd5b5061030a611c82565b34801561076157600080fd5b5061076a611d7b565b6040805163ffffffff909616865267ffffffffffffffff909416602086015261ffff90921684840152151560608401526001600160801b03166080830152519081900360a00190f35b3480156107bf57600080fd5b506103b5611dc2565b3480156107d457600080fd5b506103dc611e11565b3480156107e957600080fd5b506103b5611e20565b3480156107fe57600080fd5b506103b5611e25565b34801561081357600080fd5b5061030a6004803603602081101561082a57600080fd5b50356001600160a01b0316611e37565b34801561084657600080fd5b506103dc6004803603604081101561085d57600080fd5b5080359060200135611e99565b34801561087657600080fd5b506103446004803603604081101561088d57600080fd5b50803590602001356001600160a01b0316611eb8565b3480156108af57600080fd5b5061030a600480360360208110156108c657600080fd5b50356001600160a01b0316611ed0565b3480156108e257600080fd5b506103b5611f32565b3480156108f757600080fd5b5061030a6004803603602081101561090e57600080fd5b50356001600160a01b0316611f37565b34801561092a57600080fd5b5061030a6004803603602081101561094157600080fd5b50356001600160a01b0316611f99565b34801561095d57600080fd5b506103446004803603602081101561097457600080fd5b50356001600160a01b0316611ffb565b34801561099057600080fd5b506103dc612007565b3480156109a557600080fd5b5061030a612016565b3480156109ba57600080fd5b506103dc61207f565b3480156109cf57600080fd5b506103b5600480360360208110156109e657600080fd5b503561208e565b3480156109f957600080fd5b506103dc6120a5565b348015610a0e57600080fd5b506103b56120b4565b348015610a2357600080fd5b5061030a60048036036040811015610a3a57600080fd5b50803590602001356001600160a01b03166120c6565b348015610a5c57600080fd5b50610a6561211f565b6040805192835260208301919091528051918290030190f35b348015610a8a57600080fd5b5061030a60048036036020811015610aa157600080fd5b50356001600160a01b0316612299565b348015610abd57600080fd5b5061030a60048036036020811015610ad457600080fd5b50356001600160a01b03166122ee565b348015610af057600080fd5b5061030a60048036036020811015610b0757600080fd5b50356001600160a01b03166123a5565b348015610b2357600080fd5b506103b561245a565b348015610b3857600080fd5b506103dc612631565b348015610b4d57600080fd5b506103b5612640565b61030a610c21565b348015610b6a57600080fd5b5061030a60048036036020811015610b8157600080fd5b810190602081018135600160201b811115610b9b57600080fd5b820183602082011115610bad57600080fd5b803590602001918460018302840111600160201b83111715610bce57600080fd5b509092509050612652565b348015610be557600080fd5b5061034460048036036020811015610bfc57600080fd5b50356001600160a01b03166126b9565b348015610c1857600080fd5b506103446126d3565b6003547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161480610c8c57506004547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116145b610cc75760405162461bcd60e51b815260040180806020018281038252602781526020018061343e6027913960400191505060405180910390fd5b3415610d42577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b50505050505b565b6000610d5e6000805160206133cd83398151915283611eb8565b92915050565b6000610d5e6000805160206131dd83398151915283611eb8565b60009081526020819052604090206002015490565b6004546001600160a01b031681565b6402540be4008110610de55760405162461bcd60e51b815260040180806020018281038252604081526020018061338d6040913960400191505060405180910390fd5b612710821115610e265760405162461bcd60e51b815260040180806020018281038252603f81526020018061319e603f913960400191505060405180910390fd5b60008211610e655760405162461bcd60e51b815260040180806020018281038252602d815260200180613411602d913960400191505060405180910390fd5b6001600160a01b038416610eaa5760405162461bcd60e51b81526004018080602001828103825260268152602001806133236026913960400191505060405180910390fd5b6001600160a01b038316610eef5760405162461bcd60e51b81526004018080602001828103825260278152602001806131fd6027913960400191505060405180910390fd5b610ef8846123a5565b600880546001600160a01b0319166001600160a01b03888116919091179182905560408051633d15cc6d60e01b815290519290911691633d15cc6d91600480820192602092909190829003018186803b158015610f5457600080fd5b505afa158015610f68573d6000803e3d6000fd5b505050506040513d6020811015610f7e57600080fd5b5051600380546001600160a01b0319166001600160a01b03928316179055600854604080516304cfed9960e51b8152905191909216916399fdb320916004808301926020929190829003018186803b158015610fd957600080fd5b505afa158015610fed573d6000803e3d6000fd5b505050506040513d602081101561100357600080fd5b5051600480546001600160a01b0319166001600160a01b0392831617905560035473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee9116141561107d57600380546001600160a01b0319167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161790555b6003546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b1580156110c257600080fd5b505afa1580156110d6573d6000803e3d6000fd5b505050506040513d60208110156110ec57600080fd5b5051600480546040805163313ce56760e01b8152905160ff90941694506000936001600160a01b039092169263313ce567928282019260209290829003018186803b15801561113a57600080fd5b505afa15801561114e573d6000803e3d6000fd5b505050506040513d602081101561116457600080fd5b505160ff1690508181101561117857600080fd5b600580546001600160a01b0319166001600160a01b03891690811790915560408051631355724960e31b8152905160009291639aab9248916004808301926020929190829003018186803b1580156111cf57600080fd5b505afa1580156111e3573d6000803e3d6000fd5b505050506040513d60208110156111f957600080fd5b505160035460045491925061121d918a916001600160a01b03908116911684612768565b600680546001600160a01b03199081166001600160a01b03938416179091556007805490911691881691909117905561125585612806565b6009805461ffff92909216600160601b0261ffff60601b1990921691909117905561127f84612863565b600960000160006101000a81548163ffffffff021916908363ffffffff160217905550600061133461271061132e88600860009054906101000a90046001600160a01b03166001600160a01b031663f08b82e66040518163ffffffff1660e01b815260040160206040518083038186803b1580156112fc57600080fd5b505afa158015611310573d6000803e3d6000fd5b505050506040513d602081101561132657600080fd5b5051906128be565b9061292a565b60045490915061134e906001600160a01b03163383612988565b600454600354604080516001600160a01b038d811682528c811660208301528251948116949316927f347f9def0950a93749244d7a0cfde1e52dcb48c303a538fda3ceb25c2576d656929181900390910190a350505050505050505050565b6000828152602081905260409020600201546113d0906113cb612aa9565b611eb8565b61140b5760405162461bcd60e51b815260040180806020018281038252602f81526020018061316f602f913960400191505060405180910390fd5b6114158282612aad565b5050565b611421612aa9565b6001600160a01b0316816001600160a01b0316146114705760405162461bcd60e51b815260040180806020018281038252602f815260200180613492602f913960400191505060405180910390fd5b6114158282612b16565b6114926000805160206131dd833981519152826113ad565b61149a612aa9565b6001600160a01b0316816001600160a01b03167f1d5f9ec24c6f91be922ea13ceaad919ad6554a41b5c26087f96289a9baf98ad260405160405180910390a350565b604080516001600160a01b03978816602082015295871686820152938616606086015291909416608084015260a083019390935260c0808301939093528051808303909301835260e0909101905290565b6000600280541415611586576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600280556115926126d3565b6115cd5760405162461bcd60e51b81526004018080602001828103825260528152602001806132d16052913960600191505060405180910390fd5b600954600160701b900460ff16156115e457600080fd5b600860009054906101000a90046001600160a01b03166001600160a01b031663b3f05b976040518163ffffffff1660e01b815260040160206040518083038186803b15801561163257600080fd5b505afa158015611646573d6000803e3d6000fd5b505050506040513d602081101561165c57600080fd5b50516116cb57600860009054906101000a90046001600160a01b03166001600160a01b0316634bb278f36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156116b257600080fd5b505af11580156116c6573d6000803e3d6000fd5b505050505b6009805460ff60701b1916600160701b179055600854604080516336d0054b60e01b815290516001600160a01b03909216916336d0054b91600480820192602092909190829003018186803b15801561172357600080fd5b505afa158015611737573d6000803e3d6000fd5b505050506040513d602081101561174d57600080fd5b505161175b57506000611ab8565b4780156117d7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156117bd57600080fd5b505af11580156117d1573d6000803e3d6000fd5b50505050505b6000806117e261211f565b9150915081600014806117f3575080155b156118045760009350505050611ab8565b600554600354600480546040805163e6a4390560e01b81526001600160a01b0394851693810193909352908316602483015251600093929092169163e6a4390591604480820192602092909190829003018186803b15801561186557600080fd5b505afa158015611879573d6000803e3d6000fd5b505050506040513d602081101561188f57600080fd5b505190506001600160a01b03811615806118ae57506118ac611c1d565b155b6118ff576040805162461bcd60e51b815260206004820152601b60248201527f506f73744c69717569646974793a2050616972206e6f74206e65770000000000604482015290519081900360640190fd5b6001600160a01b03811661191557611915612b7f565b600354600654611932916001600160a01b03908116911685612c08565b60045460065461194f916001600160a01b03908116911684612c08565b600654604080516335313c2160e11b815230600482015290516001600160a01b0390921691636a627842916024808201926020929091908290030181600087803b15801561199c57600080fd5b505af11580156119b0573d6000803e3d6000fd5b505050506040513d60208110156119c657600080fd5b50516009549095506119f1906119ec90600160781b90046001600160801b031687612c84565b612cdc565b600980546001600160801b0392909216600160781b026fffffffffffffffffffffffffffffffff60781b19909216919091179081905567ffffffffffffffff600160201b90910416611a8057600954611a519063ffffffff164201612d3a565b6009805467ffffffffffffffff92909216600160201b026bffffffffffffffff00000000199092169190911790555b6040805186815290517ffdb748c915e4e67b4bb23287bf4295a4595ce48b50343214369f72ccfb974cfa9181900360200190a1505050505b600160025590565b600354604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611b0b57600080fd5b505afa158015611b1f573d6000803e3d6000fd5b505050506040513d6020811015611b3557600080fd5b505190505b90565b6007546001600160a01b031681565b611b646000805160206133cd833981519152826120c6565b611b6c612aa9565b6001600160a01b0316816001600160a01b03167f56692a161ffec953ddf9def93b958ea8d1ec95e21b80870c66be91a4374dc4e360405160405180910390a350565b611bb96000826113ad565b611bc1612aa9565b6001600160a01b0316816001600160a01b03167f2570ac42fd8b322dc453ada624dc2ed0e9bdd67f16f201a25bbd30468f2aa18760405160405180910390a350565b600454600090610d5e906001600160a01b03163384612d99565b600654604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611b0b57600080fd5b600354600090610d5e906001600160a01b03163384612d99565b611c8b33611ffb565b80611c9a5750611c9a336126b9565b611cd55760405162461bcd60e51b81526004018080602001828103825260248152602001806133496024913960400191505060405180910390fd5b600954600160701b900460ff16611d1d5760405162461bcd60e51b81526004018080602001828103825260288152602001806132246028913960400191505060405180910390fd5b6000611d27611ac0565b90508015611d4c57600354600754611d4c916001600160a01b03908116911683612c08565b6000611d56611dc2565b9050801561141557600454600754611415916001600160a01b03908116911683612c08565b60095463ffffffff811690600160201b810467ffffffffffffffff1690600160601b810461ffff1690600160701b810460ff1690600160781b90046001600160801b031685565b60048054604080516370a0823160e01b81523093810193909352516000926001600160a01b03909216916370a08231916024808301926020929190829003018186803b158015611b0b57600080fd5b6008546001600160a01b031681565b600381565b6000805160206131dd83398151915281565b611e4f6000805160206131dd833981519152826120c6565b611e57612aa9565b6001600160a01b0316816001600160a01b03167fe5f1aa9e528307345194b88b24a32401c13926e0823060f1049d9b26c0bb62b260405160405180910390a350565b6000828152602081905260408120611eb19083612e88565b9392505050565b6000828152602081905260408120611eb19083612e94565b611ee860008051602061336d833981519152826120c6565b611ef0612aa9565b6001600160a01b0316816001600160a01b03167f70b25138b6fadeb9992d18b9653564271823e34b3e3257515d12a6d4b15fcddf60405160405180910390a350565b600081565b611f4f6000805160206133cd833981519152826113ad565b611f57612aa9565b6001600160a01b0316816001600160a01b03167f0be6ab9784c7401fafb73f7bc47bc67cc4ef8c47a60ad3cb66d1de0353a0784c60405160405180910390a350565b611fb160008051602061336d833981519152826113ad565b611fb9612aa9565b6001600160a01b0316816001600160a01b03167f2d45ee102874989882745a26688d0b4fffee125a18df26536b12582c7fde4e1760405160405180910390a350565b6000610d5e8183611eb8565b6005546001600160a01b031681565b61201f33611ffb565b61202857600080fd5b600954600160701b900460ff161561203f57600080fd5b6009805460ff60701b1916600160701b17905560405133907f8c549b74aaa0c6619e0bbf388c66d59e84e25a829b1849376129856c778c6b4290600090a2565b6006546001600160a01b031690565b6000818152602081905260408120610d5e90612ea9565b6003546001600160a01b031681565b6000805160206133cd83398151915281565b6000828152602081905260409020600201546120e4906113cb612aa9565b6114705760405162461bcd60e51b81526004018080602001828103825260308152602001806132716030913960400191505060405180910390fd5b600954600090819061214c906127109061132e90600160601b900461ffff16612146611ac0565b906128be565b9150612156611dc2565b90506000600860009054906101000a90046001600160a01b03166001600160a01b0316637ff9b5966040518163ffffffff1660e01b815260040160206040518083038186803b1580156121a857600080fd5b505afa1580156121bc573d6000803e3d6000fd5b505050506040513d60208110156121d257600080fd5b5051600480546040805163313ce56760e01b815290519394506000936001600160a01b039092169263313ce567928282019260209290829003018186803b15801561221c57600080fd5b505afa158015612230573d6000803e3d6000fd5b505050506040513d602081101561224657600080fd5b505160ff1690506000612261600a83900a61132e86866128be565b905060006122778461132e88600a87900a6128be565b905080851115612285578094505b81861115612291578195505b505050509091565b6122a46000826120c6565b6122ac612aa9565b6001600160a01b0316816001600160a01b03167f21ba1239795d4e22874e3dc55f0a9d7b65bfb23069d32965d7c23be9524ccf9560405160405180910390a350565b6122f733611ffb565b61230057600080fd5b6001600160a01b03811661235b576040805162461bcd60e51b815260206004820152601a60248201527f57616c6c657420697320746865207a65726f2061646472657373000000000000604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040517f4edbfac5b40fe46ac1af1fd222b224b38cfeeb9e21bd4fc6344526c245f7549b90600090a250565b60015460ff16156123f3576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5cd959606a1b604482015290519081900360640190fd5b6001600160a01b038116612440576040805162461bcd60e51b815260206004820152600f60248201526e125b98dbdc9c9958dd081a5b9c1d5d608a1b604482015290519081900360640190fd5b61244b60008261140b565b506001805460ff191681179055565b600061246533611ffb565b806124745750612474336126b9565b6124af5760405162461bcd60e51b81526004018080602001828103825260248152602001806133496024913960400191505060405180910390fd5b600954600160701b900460ff166124f75760405162461bcd60e51b81526004018080602001828103825260288152602001806132246028913960400191505060405180910390fd5b600954600160201b900467ffffffffffffffff1642101561255f576040805162461bcd60e51b815260206004820181905260248201527f506f737441756374696f6e3a204c6971756964697479206973206c6f636b6564604482015290519081900360640190fd5b600654604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156125aa57600080fd5b505afa1580156125be573d6000803e3d6000fd5b505050506040513d60208110156125d457600080fd5b50519050806126145760405162461bcd60e51b815260040180806020018281038252602d815260200180613465602d913960400191505060405180910390fd5b600654600754611b3a916001600160a01b03908116911683612c08565b6006546001600160a01b031681565b60008051602061336d83398151915281565b600080600080600080878760c081101561266b57600080fd5b506001600160a01b0381358116975060208201358116965060408201358116955060608201351693506080810135925060a0013590506126af868686868686610da2565b5050505050505050565b6000610d5e60008051602061336d83398151915283611eb8565b6000306001600160a01b0316600860009054906101000a90046001600160a01b03166001600160a01b031663521eb2736040518163ffffffff1660e01b815260040160206040518083038186803b15801561272d57600080fd5b505afa158015612741573d6000803e3d6000fd5b505050506040513d602081101561275757600080fd5b50516001600160a01b031614905090565b60008060006127778686612eb4565b604080516bffffffffffffffffffffffff19606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501206001600160f81b031960688401529b90941b9093166069840152607d830199909952609d808301969096528851808303909601865260bd9091019097525050815191909401209392505050565b600061ffff82111561285f576040805162461bcd60e51b815260206004820152601b60248201527f426f72696e674d6174683a2075696e743136204f766572666c6f770000000000604482015290519081900360640190fd5b5090565b600063ffffffff82111561285f576040805162461bcd60e51b815260206004820152601b60248201527f426f72696e674d6174683a2075696e743332204f766572666c6f770000000000604482015290519081900360640190fd5b60008115806128d9575050808202828282816128d657fe5b04145b610d5e576040805162461bcd60e51b815260206004820152601860248201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604482015290519081900360640190fd5b6000808211612977576040805162461bcd60e51b8152602060048201526014602482015273426f72696e674d6174683a20446976207a65726f60601b604482015290519081900360640190fd5b81838161298057fe5b049392505050565b604080516001600160a01b038481166024830152306044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000946060949389169392918291908083835b60208310612a0b5780518252601f1990920191602091820191016129ec565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612a6d576040519150601f19603f3d011682016040523d82523d6000602084013e612a72565b606091505b5091509150818015612aa0575080511580612aa05750808060200190516020811015612a9d57600080fd5b50515b610d3c57600080fd5b3390565b6000828152602081905260409020612ac59082612f92565b1561141557612ad2612aa9565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020612b2e9082612fa7565b1561141557612b3b612aa9565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60055460035460048054604080516364e329cb60e11b81526001600160a01b0394851693810193909352908316602483015251919092169163c9c653969160448083019260209291908290030181600087803b158015612bde57600080fd5b505af1158015612bf2573d6000803e3d6000fd5b505050506040513d602081101561141557600080fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009460609493891693929182919080838360208310612a0b5780518252601f1990920191602091820191016129ec565b81810181811015610d5e576040805162461bcd60e51b815260206004820152601860248201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604482015290519081900360640190fd5b60006001600160801b0382111561285f576040805162461bcd60e51b815260206004820152601c60248201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604482015290519081900360640190fd5b600067ffffffffffffffff82111561285f576040805162461bcd60e51b815260206004820152601b60248201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604482015290519081900360640190fd5b600954600090600160701b900460ff1615612de55760405162461bcd60e51b81526004018080602001828103825260288152602001806132246028913960400191505060405180910390fd5b600954600160781b90046001600160801b031615612e345760405162461bcd60e51b81526004018080602001828103825260248152602001806133ed6024913960400191505060405180910390fd5b60008211612e735760405162461bcd60e51b81526004018080602001828103825260308152602001806132a16030913960400191505060405180910390fd5b612e7e848484612988565b5060019392505050565b6000611eb18383612fbc565b6000611eb1836001600160a01b038416613020565b6000610d5e82613038565b600080826001600160a01b0316846001600160a01b03161415612f085760405162461bcd60e51b815260040180806020018281038252602581526020018061324c6025913960400191505060405180910390fd5b826001600160a01b0316846001600160a01b031610612f28578284612f2b565b83835b90925090506001600160a01b038216612f8b576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015290519081900360640190fd5b9250929050565b6000611eb1836001600160a01b03841661303c565b6000611eb1836001600160a01b038416613086565b81546000908210612ffe5760405162461bcd60e51b815260040180806020018281038252602281526020018061314d6022913960400191505060405180910390fd5b82600001828154811061300d57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60006130488383613020565b61307e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610d5e565b506000610d5e565b6000818152600183016020526040812054801561314257835460001980830191908101906000908790839081106130b957fe5b90600052602060002001549050808760000184815481106130d657fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061310657fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610d5e565b6000915050610d5e56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74506f737441756374696f6e3a204c69717569646974792070657263656e746167652067726561746572207468616e203130302e30302520283e3130303030299d49f397ae9ef1a834b569acb967799a367061e305932181a44f5773da873bfd506f737441756374696f6e3a2077616c6c657420697320746865207a65726f2061646472657373506f737441756374696f6e3a204d757374206669727374206c61756e6368206c6971756964697479556e697377617056324c6962726172793a204944454e544943414c5f414444524553534553416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65506f737441756374696f6e3a20546f6b656e20616d6f756e74206d7573742062652067726561746572207468616e2030506f737441756374696f6e3a2041756374696f6e206d75737420686176652074686973206c61756e63686572206164647265737320736574206173207468652064657374696e6174696f6e2077616c6c6574506f737441756374696f6e3a2061646d696e20697320746865207a65726f2061646472657373506f737441756374696f6e3a2053656e646572206d757374206265206f70657261746f7297667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929506f737441756374696f6e3a20456e74657220616e20756e69782074696d657374616d7020696e207365636f6e64732c206e6f74206d696c697365636f6e64739f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6506f737441756374696f6e3a204c697175696469747920616c7265616479206164646564506f737441756374696f6e3a204c69717569646974792070657263656e7461676520657175616c73207a65726f506f737441756374696f6e3a204c61756e63686572206e6f7420616363657074696e6720455448506f737441756374696f6e3a204c6971756964697479206d7573742062652067726561746572207468616e2030416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220bb924d24a352673ebc9645229883c3d17680f575fde64a71b7be2afd3655332064736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106102cd5760003560e01c80639010d07c11610175578063d5391393116100dc578063edf8bc1311610095578063f6326fb31161006f578063f6326fb314610b56578063f82fc8ce14610b5e578063fc4e3e0a14610bd9578063fc62485a14610c0c5761030c565b8063edf8bc1314610b17578063ee16c16014610b2c578063f5b541a614610b415761030c565b8063d539139314610a02578063d547741f14610a17578063d73cc4df14610a50578063dccfe31014610a7e578063deaa59df14610ab1578063e6594abd14610ae45761030c565b8063c395fcb31161012e578063c395fcb314610951578063c45a015514610984578063c9d41a4014610999578063c9e57aa6146109ae578063ca15c873146109c3578063d21220a7146109ed5761030c565b80639010d07c1461083a57806391d148541461086a5780639478941c146108a3578063a217fddf146108d6578063adbf3776146108eb578063b7928b1d1461091e5761030c565b8063521eb273116102345780637cf2ed22116101ed57806380f55605116101c757806380f55605146107c85780638566de4b146107dd578063857d2608146107f25780638a845fc0146108075761030c565b80637cf2ed22146107405780637f4f577d14610755578063801ea6ec146107b35761030c565b8063521eb2731461065c57806354f1e126146106715780636595171c146106a457806368b84b72146106d75780636f43f17b1461070157806371210a0d146107165761030c565b806336568abe1161028657806336568abe1461048a5780633f16431a146104c35780634422c3a1146104f65780634bb278f3146105c45780634ddf47d4146105d95780635153786b146106475761030c565b8063099db01714610311578063113b0ab214610358578063248a9ca31461038b57806325be124e146103c75780632dd7131a146103f85780632f2ff15d146104515761030c565b3661030c57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461030a5761030a610c21565b005b600080fd5b34801561031d57600080fd5b506103446004803603602081101561033457600080fd5b50356001600160a01b0316610d44565b604080519115158252519081900360200190f35b34801561036457600080fd5b506103446004803603602081101561037b57600080fd5b50356001600160a01b0316610d64565b34801561039757600080fd5b506103b5600480360360208110156103ae57600080fd5b5035610d7e565b60408051918252519081900360200190f35b3480156103d357600080fd5b506103dc610d93565b604080516001600160a01b039092168252519081900360200190f35b34801561040457600080fd5b5061030a600480360360c081101561041b57600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060808101359060a00135610da2565b34801561045d57600080fd5b5061030a6004803603604081101561047457600080fd5b50803590602001356001600160a01b03166113ad565b34801561049657600080fd5b5061030a600480360360408110156104ad57600080fd5b50803590602001356001600160a01b0316611419565b3480156104cf57600080fd5b5061030a600480360360208110156104e657600080fd5b50356001600160a01b031661147a565b34801561050257600080fd5b5061054f600480360360c081101561051957600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060808101359060a001356114dc565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610589578181015183820152602001610571565b50505050905090810190601f1680156105b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105d057600080fd5b506103b561152d565b61030a600480360360208110156105ef57600080fd5b810190602081018135600160201b81111561060957600080fd5b82018360208201111561061b57600080fd5b803590602001918460018302840111600160201b8311171561063c57600080fd5b509092509050611415565b34801561065357600080fd5b506103b5611ac0565b34801561066857600080fd5b506103dc611b3d565b34801561067d57600080fd5b5061030a6004803603602081101561069457600080fd5b50356001600160a01b0316611b4c565b3480156106b057600080fd5b5061030a600480360360208110156106c757600080fd5b50356001600160a01b0316611bae565b3480156106e357600080fd5b50610344600480360360208110156106fa57600080fd5b5035611c03565b34801561070d57600080fd5b506103b5611c1d565b34801561072257600080fd5b506103446004803603602081101561073957600080fd5b5035611c68565b34801561074c57600080fd5b5061030a611c82565b34801561076157600080fd5b5061076a611d7b565b6040805163ffffffff909616865267ffffffffffffffff909416602086015261ffff90921684840152151560608401526001600160801b03166080830152519081900360a00190f35b3480156107bf57600080fd5b506103b5611dc2565b3480156107d457600080fd5b506103dc611e11565b3480156107e957600080fd5b506103b5611e20565b3480156107fe57600080fd5b506103b5611e25565b34801561081357600080fd5b5061030a6004803603602081101561082a57600080fd5b50356001600160a01b0316611e37565b34801561084657600080fd5b506103dc6004803603604081101561085d57600080fd5b5080359060200135611e99565b34801561087657600080fd5b506103446004803603604081101561088d57600080fd5b50803590602001356001600160a01b0316611eb8565b3480156108af57600080fd5b5061030a600480360360208110156108c657600080fd5b50356001600160a01b0316611ed0565b3480156108e257600080fd5b506103b5611f32565b3480156108f757600080fd5b5061030a6004803603602081101561090e57600080fd5b50356001600160a01b0316611f37565b34801561092a57600080fd5b5061030a6004803603602081101561094157600080fd5b50356001600160a01b0316611f99565b34801561095d57600080fd5b506103446004803603602081101561097457600080fd5b50356001600160a01b0316611ffb565b34801561099057600080fd5b506103dc612007565b3480156109a557600080fd5b5061030a612016565b3480156109ba57600080fd5b506103dc61207f565b3480156109cf57600080fd5b506103b5600480360360208110156109e657600080fd5b503561208e565b3480156109f957600080fd5b506103dc6120a5565b348015610a0e57600080fd5b506103b56120b4565b348015610a2357600080fd5b5061030a60048036036040811015610a3a57600080fd5b50803590602001356001600160a01b03166120c6565b348015610a5c57600080fd5b50610a6561211f565b6040805192835260208301919091528051918290030190f35b348015610a8a57600080fd5b5061030a60048036036020811015610aa157600080fd5b50356001600160a01b0316612299565b348015610abd57600080fd5b5061030a60048036036020811015610ad457600080fd5b50356001600160a01b03166122ee565b348015610af057600080fd5b5061030a60048036036020811015610b0757600080fd5b50356001600160a01b03166123a5565b348015610b2357600080fd5b506103b561245a565b348015610b3857600080fd5b506103dc612631565b348015610b4d57600080fd5b506103b5612640565b61030a610c21565b348015610b6a57600080fd5b5061030a60048036036020811015610b8157600080fd5b810190602081018135600160201b811115610b9b57600080fd5b820183602082011115610bad57600080fd5b803590602001918460018302840111600160201b83111715610bce57600080fd5b509092509050612652565b348015610be557600080fd5b5061034460048036036020811015610bfc57600080fd5b50356001600160a01b03166126b9565b348015610c1857600080fd5b506103446126d3565b6003547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161480610c8c57506004547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116145b610cc75760405162461bcd60e51b815260040180806020018281038252602781526020018061343e6027913960400191505060405180910390fd5b3415610d42577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b50505050505b565b6000610d5e6000805160206133cd83398151915283611eb8565b92915050565b6000610d5e6000805160206131dd83398151915283611eb8565b60009081526020819052604090206002015490565b6004546001600160a01b031681565b6402540be4008110610de55760405162461bcd60e51b815260040180806020018281038252604081526020018061338d6040913960400191505060405180910390fd5b612710821115610e265760405162461bcd60e51b815260040180806020018281038252603f81526020018061319e603f913960400191505060405180910390fd5b60008211610e655760405162461bcd60e51b815260040180806020018281038252602d815260200180613411602d913960400191505060405180910390fd5b6001600160a01b038416610eaa5760405162461bcd60e51b81526004018080602001828103825260268152602001806133236026913960400191505060405180910390fd5b6001600160a01b038316610eef5760405162461bcd60e51b81526004018080602001828103825260278152602001806131fd6027913960400191505060405180910390fd5b610ef8846123a5565b600880546001600160a01b0319166001600160a01b03888116919091179182905560408051633d15cc6d60e01b815290519290911691633d15cc6d91600480820192602092909190829003018186803b158015610f5457600080fd5b505afa158015610f68573d6000803e3d6000fd5b505050506040513d6020811015610f7e57600080fd5b5051600380546001600160a01b0319166001600160a01b03928316179055600854604080516304cfed9960e51b8152905191909216916399fdb320916004808301926020929190829003018186803b158015610fd957600080fd5b505afa158015610fed573d6000803e3d6000fd5b505050506040513d602081101561100357600080fd5b5051600480546001600160a01b0319166001600160a01b0392831617905560035473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee9116141561107d57600380546001600160a01b0319167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161790555b6003546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b1580156110c257600080fd5b505afa1580156110d6573d6000803e3d6000fd5b505050506040513d60208110156110ec57600080fd5b5051600480546040805163313ce56760e01b8152905160ff90941694506000936001600160a01b039092169263313ce567928282019260209290829003018186803b15801561113a57600080fd5b505afa15801561114e573d6000803e3d6000fd5b505050506040513d602081101561116457600080fd5b505160ff1690508181101561117857600080fd5b600580546001600160a01b0319166001600160a01b03891690811790915560408051631355724960e31b8152905160009291639aab9248916004808301926020929190829003018186803b1580156111cf57600080fd5b505afa1580156111e3573d6000803e3d6000fd5b505050506040513d60208110156111f957600080fd5b505160035460045491925061121d918a916001600160a01b03908116911684612768565b600680546001600160a01b03199081166001600160a01b03938416179091556007805490911691881691909117905561125585612806565b6009805461ffff92909216600160601b0261ffff60601b1990921691909117905561127f84612863565b600960000160006101000a81548163ffffffff021916908363ffffffff160217905550600061133461271061132e88600860009054906101000a90046001600160a01b03166001600160a01b031663f08b82e66040518163ffffffff1660e01b815260040160206040518083038186803b1580156112fc57600080fd5b505afa158015611310573d6000803e3d6000fd5b505050506040513d602081101561132657600080fd5b5051906128be565b9061292a565b60045490915061134e906001600160a01b03163383612988565b600454600354604080516001600160a01b038d811682528c811660208301528251948116949316927f347f9def0950a93749244d7a0cfde1e52dcb48c303a538fda3ceb25c2576d656929181900390910190a350505050505050505050565b6000828152602081905260409020600201546113d0906113cb612aa9565b611eb8565b61140b5760405162461bcd60e51b815260040180806020018281038252602f81526020018061316f602f913960400191505060405180910390fd5b6114158282612aad565b5050565b611421612aa9565b6001600160a01b0316816001600160a01b0316146114705760405162461bcd60e51b815260040180806020018281038252602f815260200180613492602f913960400191505060405180910390fd5b6114158282612b16565b6114926000805160206131dd833981519152826113ad565b61149a612aa9565b6001600160a01b0316816001600160a01b03167f1d5f9ec24c6f91be922ea13ceaad919ad6554a41b5c26087f96289a9baf98ad260405160405180910390a350565b604080516001600160a01b03978816602082015295871686820152938616606086015291909416608084015260a083019390935260c0808301939093528051808303909301835260e0909101905290565b6000600280541415611586576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600280556115926126d3565b6115cd5760405162461bcd60e51b81526004018080602001828103825260528152602001806132d16052913960600191505060405180910390fd5b600954600160701b900460ff16156115e457600080fd5b600860009054906101000a90046001600160a01b03166001600160a01b031663b3f05b976040518163ffffffff1660e01b815260040160206040518083038186803b15801561163257600080fd5b505afa158015611646573d6000803e3d6000fd5b505050506040513d602081101561165c57600080fd5b50516116cb57600860009054906101000a90046001600160a01b03166001600160a01b0316634bb278f36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156116b257600080fd5b505af11580156116c6573d6000803e3d6000fd5b505050505b6009805460ff60701b1916600160701b179055600854604080516336d0054b60e01b815290516001600160a01b03909216916336d0054b91600480820192602092909190829003018186803b15801561172357600080fd5b505afa158015611737573d6000803e3d6000fd5b505050506040513d602081101561174d57600080fd5b505161175b57506000611ab8565b4780156117d7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156117bd57600080fd5b505af11580156117d1573d6000803e3d6000fd5b50505050505b6000806117e261211f565b9150915081600014806117f3575080155b156118045760009350505050611ab8565b600554600354600480546040805163e6a4390560e01b81526001600160a01b0394851693810193909352908316602483015251600093929092169163e6a4390591604480820192602092909190829003018186803b15801561186557600080fd5b505afa158015611879573d6000803e3d6000fd5b505050506040513d602081101561188f57600080fd5b505190506001600160a01b03811615806118ae57506118ac611c1d565b155b6118ff576040805162461bcd60e51b815260206004820152601b60248201527f506f73744c69717569646974793a2050616972206e6f74206e65770000000000604482015290519081900360640190fd5b6001600160a01b03811661191557611915612b7f565b600354600654611932916001600160a01b03908116911685612c08565b60045460065461194f916001600160a01b03908116911684612c08565b600654604080516335313c2160e11b815230600482015290516001600160a01b0390921691636a627842916024808201926020929091908290030181600087803b15801561199c57600080fd5b505af11580156119b0573d6000803e3d6000fd5b505050506040513d60208110156119c657600080fd5b50516009549095506119f1906119ec90600160781b90046001600160801b031687612c84565b612cdc565b600980546001600160801b0392909216600160781b026fffffffffffffffffffffffffffffffff60781b19909216919091179081905567ffffffffffffffff600160201b90910416611a8057600954611a519063ffffffff164201612d3a565b6009805467ffffffffffffffff92909216600160201b026bffffffffffffffff00000000199092169190911790555b6040805186815290517ffdb748c915e4e67b4bb23287bf4295a4595ce48b50343214369f72ccfb974cfa9181900360200190a1505050505b600160025590565b600354604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611b0b57600080fd5b505afa158015611b1f573d6000803e3d6000fd5b505050506040513d6020811015611b3557600080fd5b505190505b90565b6007546001600160a01b031681565b611b646000805160206133cd833981519152826120c6565b611b6c612aa9565b6001600160a01b0316816001600160a01b03167f56692a161ffec953ddf9def93b958ea8d1ec95e21b80870c66be91a4374dc4e360405160405180910390a350565b611bb96000826113ad565b611bc1612aa9565b6001600160a01b0316816001600160a01b03167f2570ac42fd8b322dc453ada624dc2ed0e9bdd67f16f201a25bbd30468f2aa18760405160405180910390a350565b600454600090610d5e906001600160a01b03163384612d99565b600654604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611b0b57600080fd5b600354600090610d5e906001600160a01b03163384612d99565b611c8b33611ffb565b80611c9a5750611c9a336126b9565b611cd55760405162461bcd60e51b81526004018080602001828103825260248152602001806133496024913960400191505060405180910390fd5b600954600160701b900460ff16611d1d5760405162461bcd60e51b81526004018080602001828103825260288152602001806132246028913960400191505060405180910390fd5b6000611d27611ac0565b90508015611d4c57600354600754611d4c916001600160a01b03908116911683612c08565b6000611d56611dc2565b9050801561141557600454600754611415916001600160a01b03908116911683612c08565b60095463ffffffff811690600160201b810467ffffffffffffffff1690600160601b810461ffff1690600160701b810460ff1690600160781b90046001600160801b031685565b60048054604080516370a0823160e01b81523093810193909352516000926001600160a01b03909216916370a08231916024808301926020929190829003018186803b158015611b0b57600080fd5b6008546001600160a01b031681565b600381565b6000805160206131dd83398151915281565b611e4f6000805160206131dd833981519152826120c6565b611e57612aa9565b6001600160a01b0316816001600160a01b03167fe5f1aa9e528307345194b88b24a32401c13926e0823060f1049d9b26c0bb62b260405160405180910390a350565b6000828152602081905260408120611eb19083612e88565b9392505050565b6000828152602081905260408120611eb19083612e94565b611ee860008051602061336d833981519152826120c6565b611ef0612aa9565b6001600160a01b0316816001600160a01b03167f70b25138b6fadeb9992d18b9653564271823e34b3e3257515d12a6d4b15fcddf60405160405180910390a350565b600081565b611f4f6000805160206133cd833981519152826113ad565b611f57612aa9565b6001600160a01b0316816001600160a01b03167f0be6ab9784c7401fafb73f7bc47bc67cc4ef8c47a60ad3cb66d1de0353a0784c60405160405180910390a350565b611fb160008051602061336d833981519152826113ad565b611fb9612aa9565b6001600160a01b0316816001600160a01b03167f2d45ee102874989882745a26688d0b4fffee125a18df26536b12582c7fde4e1760405160405180910390a350565b6000610d5e8183611eb8565b6005546001600160a01b031681565b61201f33611ffb565b61202857600080fd5b600954600160701b900460ff161561203f57600080fd5b6009805460ff60701b1916600160701b17905560405133907f8c549b74aaa0c6619e0bbf388c66d59e84e25a829b1849376129856c778c6b4290600090a2565b6006546001600160a01b031690565b6000818152602081905260408120610d5e90612ea9565b6003546001600160a01b031681565b6000805160206133cd83398151915281565b6000828152602081905260409020600201546120e4906113cb612aa9565b6114705760405162461bcd60e51b81526004018080602001828103825260308152602001806132716030913960400191505060405180910390fd5b600954600090819061214c906127109061132e90600160601b900461ffff16612146611ac0565b906128be565b9150612156611dc2565b90506000600860009054906101000a90046001600160a01b03166001600160a01b0316637ff9b5966040518163ffffffff1660e01b815260040160206040518083038186803b1580156121a857600080fd5b505afa1580156121bc573d6000803e3d6000fd5b505050506040513d60208110156121d257600080fd5b5051600480546040805163313ce56760e01b815290519394506000936001600160a01b039092169263313ce567928282019260209290829003018186803b15801561221c57600080fd5b505afa158015612230573d6000803e3d6000fd5b505050506040513d602081101561224657600080fd5b505160ff1690506000612261600a83900a61132e86866128be565b905060006122778461132e88600a87900a6128be565b905080851115612285578094505b81861115612291578195505b505050509091565b6122a46000826120c6565b6122ac612aa9565b6001600160a01b0316816001600160a01b03167f21ba1239795d4e22874e3dc55f0a9d7b65bfb23069d32965d7c23be9524ccf9560405160405180910390a350565b6122f733611ffb565b61230057600080fd5b6001600160a01b03811661235b576040805162461bcd60e51b815260206004820152601a60248201527f57616c6c657420697320746865207a65726f2061646472657373000000000000604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040517f4edbfac5b40fe46ac1af1fd222b224b38cfeeb9e21bd4fc6344526c245f7549b90600090a250565b60015460ff16156123f3576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5cd959606a1b604482015290519081900360640190fd5b6001600160a01b038116612440576040805162461bcd60e51b815260206004820152600f60248201526e125b98dbdc9c9958dd081a5b9c1d5d608a1b604482015290519081900360640190fd5b61244b60008261140b565b506001805460ff191681179055565b600061246533611ffb565b806124745750612474336126b9565b6124af5760405162461bcd60e51b81526004018080602001828103825260248152602001806133496024913960400191505060405180910390fd5b600954600160701b900460ff166124f75760405162461bcd60e51b81526004018080602001828103825260288152602001806132246028913960400191505060405180910390fd5b600954600160201b900467ffffffffffffffff1642101561255f576040805162461bcd60e51b815260206004820181905260248201527f506f737441756374696f6e3a204c6971756964697479206973206c6f636b6564604482015290519081900360640190fd5b600654604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156125aa57600080fd5b505afa1580156125be573d6000803e3d6000fd5b505050506040513d60208110156125d457600080fd5b50519050806126145760405162461bcd60e51b815260040180806020018281038252602d815260200180613465602d913960400191505060405180910390fd5b600654600754611b3a916001600160a01b03908116911683612c08565b6006546001600160a01b031681565b60008051602061336d83398151915281565b600080600080600080878760c081101561266b57600080fd5b506001600160a01b0381358116975060208201358116965060408201358116955060608201351693506080810135925060a0013590506126af868686868686610da2565b5050505050505050565b6000610d5e60008051602061336d83398151915283611eb8565b6000306001600160a01b0316600860009054906101000a90046001600160a01b03166001600160a01b031663521eb2736040518163ffffffff1660e01b815260040160206040518083038186803b15801561272d57600080fd5b505afa158015612741573d6000803e3d6000fd5b505050506040513d602081101561275757600080fd5b50516001600160a01b031614905090565b60008060006127778686612eb4565b604080516bffffffffffffffffffffffff19606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501206001600160f81b031960688401529b90941b9093166069840152607d830199909952609d808301969096528851808303909601865260bd9091019097525050815191909401209392505050565b600061ffff82111561285f576040805162461bcd60e51b815260206004820152601b60248201527f426f72696e674d6174683a2075696e743136204f766572666c6f770000000000604482015290519081900360640190fd5b5090565b600063ffffffff82111561285f576040805162461bcd60e51b815260206004820152601b60248201527f426f72696e674d6174683a2075696e743332204f766572666c6f770000000000604482015290519081900360640190fd5b60008115806128d9575050808202828282816128d657fe5b04145b610d5e576040805162461bcd60e51b815260206004820152601860248201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604482015290519081900360640190fd5b6000808211612977576040805162461bcd60e51b8152602060048201526014602482015273426f72696e674d6174683a20446976207a65726f60601b604482015290519081900360640190fd5b81838161298057fe5b049392505050565b604080516001600160a01b038481166024830152306044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000946060949389169392918291908083835b60208310612a0b5780518252601f1990920191602091820191016129ec565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612a6d576040519150601f19603f3d011682016040523d82523d6000602084013e612a72565b606091505b5091509150818015612aa0575080511580612aa05750808060200190516020811015612a9d57600080fd5b50515b610d3c57600080fd5b3390565b6000828152602081905260409020612ac59082612f92565b1561141557612ad2612aa9565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020612b2e9082612fa7565b1561141557612b3b612aa9565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60055460035460048054604080516364e329cb60e11b81526001600160a01b0394851693810193909352908316602483015251919092169163c9c653969160448083019260209291908290030181600087803b158015612bde57600080fd5b505af1158015612bf2573d6000803e3d6000fd5b505050506040513d602081101561141557600080fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009460609493891693929182919080838360208310612a0b5780518252601f1990920191602091820191016129ec565b81810181811015610d5e576040805162461bcd60e51b815260206004820152601860248201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604482015290519081900360640190fd5b60006001600160801b0382111561285f576040805162461bcd60e51b815260206004820152601c60248201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604482015290519081900360640190fd5b600067ffffffffffffffff82111561285f576040805162461bcd60e51b815260206004820152601b60248201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604482015290519081900360640190fd5b600954600090600160701b900460ff1615612de55760405162461bcd60e51b81526004018080602001828103825260288152602001806132246028913960400191505060405180910390fd5b600954600160781b90046001600160801b031615612e345760405162461bcd60e51b81526004018080602001828103825260248152602001806133ed6024913960400191505060405180910390fd5b60008211612e735760405162461bcd60e51b81526004018080602001828103825260308152602001806132a16030913960400191505060405180910390fd5b612e7e848484612988565b5060019392505050565b6000611eb18383612fbc565b6000611eb1836001600160a01b038416613020565b6000610d5e82613038565b600080826001600160a01b0316846001600160a01b03161415612f085760405162461bcd60e51b815260040180806020018281038252602581526020018061324c6025913960400191505060405180910390fd5b826001600160a01b0316846001600160a01b031610612f28578284612f2b565b83835b90925090506001600160a01b038216612f8b576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015290519081900360640190fd5b9250929050565b6000611eb1836001600160a01b03841661303c565b6000611eb1836001600160a01b038416613086565b81546000908210612ffe5760405162461bcd60e51b815260040180806020018281038252602281526020018061314d6022913960400191505060405180910390fd5b82600001828154811061300d57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60006130488383613020565b61307e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610d5e565b506000610d5e565b6000818152600183016020526040812054801561314257835460001980830191908101906000908790839081106130b957fe5b90600052602060002001549050808760000184815481106130d657fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061310657fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610d5e565b6000915050610d5e56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74506f737441756374696f6e3a204c69717569646974792070657263656e746167652067726561746572207468616e203130302e30302520283e3130303030299d49f397ae9ef1a834b569acb967799a367061e305932181a44f5773da873bfd506f737441756374696f6e3a2077616c6c657420697320746865207a65726f2061646472657373506f737441756374696f6e3a204d757374206669727374206c61756e6368206c6971756964697479556e697377617056324c6962726172793a204944454e544943414c5f414444524553534553416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65506f737441756374696f6e3a20546f6b656e20616d6f756e74206d7573742062652067726561746572207468616e2030506f737441756374696f6e3a2041756374696f6e206d75737420686176652074686973206c61756e63686572206164647265737320736574206173207468652064657374696e6174696f6e2077616c6c6574506f737441756374696f6e3a2061646d696e20697320746865207a65726f2061646472657373506f737441756374696f6e3a2053656e646572206d757374206265206f70657261746f7297667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929506f737441756374696f6e3a20456e74657220616e20756e69782074696d657374616d7020696e207365636f6e64732c206e6f74206d696c697365636f6e64739f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6506f737441756374696f6e3a204c697175696469747920616c7265616479206164646564506f737441756374696f6e3a204c69717569646974792070657263656e7461676520657175616c73207a65726f506f737441756374696f6e3a204c61756e63686572206e6f7420616363657074696e6720455448506f737441756374696f6e3a204c6971756964697479206d7573742062652067726561746572207468616e2030416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220bb924d24a352673ebc9645229883c3d17680f575fde64a71b7be2afd3655332064736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAdminRole(address)": {
        "details": "The sender must have the admin role.",
        "params": {
          "_address": "EOA or contract receiving the new role."
        }
      },
      "addMinterRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract receiving the new role"
        }
      },
      "addOperatorRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract receiving the new role"
        }
      },
      "addSmartContractRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract receiving the new role"
        }
      },
      "depositToken1(uint256)": {
        "params": {
          "_amount": "Number of tokens to deposit."
        }
      },
      "depositToken2(uint256)": {
        "params": {
          "_amount": "Number of tokens to deposit."
        }
      },
      "finalize()": {
        "returns": {
          "liquidity": "Number of LPs."
        }
      },
      "getLPBalance()": {
        "returns": {
          "_0": "uint256 LP Token balance."
        }
      },
      "getLPTokenAddress()": {
        "returns": {
          "_0": "address LP address."
        }
      },
      "getLauncherInitData(address,address,address,address,uint256,uint256)": {
        "params": {
          "_admin": "Contract owner address.",
          "_factory": "Uniswap V2 factory address.",
          "_liquidityPercent": "Percentage of payment currency sent to liquidity pool.",
          "_locktime": "How long the liquidity will be locked. Number of seconds.",
          "_market": "Auction address for launcher.",
          "_wallet": "Withdraw wallet address."
        },
        "returns": {
          "_data": "All the data in bytes format."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "getToken1Balance()": {
        "returns": {
          "_0": "uint256 Number of WETH."
        }
      },
      "getToken2Balance()": {
        "returns": {
          "_0": "uint256 Number of WETH."
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasAdminRole(address)": {
        "params": {
          "_address": "EOA or contract being checked."
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not."
        }
      },
      "hasMinterRole(address)": {
        "params": {
          "_address": "EOA or contract being checked"
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not"
        }
      },
      "hasOperatorRole(address)": {
        "params": {
          "_address": "EOA or contract being checked"
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not"
        }
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "hasSmartContractRole(address)": {
        "params": {
          "_address": "EOA or contract being checked"
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not"
        }
      },
      "init(bytes)": {
        "params": {
          "_data": "Encoded data for initialization."
        }
      },
      "initAccessControls(address)": {
        "params": {
          "_admin": "Admins address."
        }
      },
      "initAuctionLauncher(address,address,address,address,uint256,uint256)": {
        "params": {
          "_admin": "Contract owner address.",
          "_factory": "Uniswap V2 factory address.",
          "_liquidityPercent": "Percentage of payment currency sent to liquidity pool.",
          "_locktime": "How long the liquidity will be locked. Number of seconds.",
          "_market": "Auction address for launcher.",
          "_wallet": "Withdraw wallet address."
        }
      },
      "removeAdminRole(address)": {
        "details": "The sender must have the admin role.",
        "params": {
          "_address": "EOA or contract affected."
        }
      },
      "removeMinterRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract affected"
        }
      },
      "removeOperatorRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract affected"
        }
      },
      "removeSmartContractRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract affected"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setWallet(address)": {
        "params": {
          "_wallet": "Wallet is where funds will be sent."
        }
      },
      "withdrawLPTokens()": {
        "returns": {
          "liquidity": "Number of LPs."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "AdminRoleGranted(address,address)": {
        "notice": "Events for adding and removing various roles."
      },
      "InitLiquidityLauncher(address,address,address,address)": {
        "notice": "Emitted when LP contract is initialised."
      },
      "LauncherCancelled(address)": {
        "notice": "Emitted when launcher is cancelled."
      },
      "LiquidityAdded(uint256)": {
        "notice": "Emitted when LP is launched."
      },
      "MinterRoleGranted(address,address)": {
        "notice": "Events for adding and removing various roles"
      },
      "WalletUpdated(address)": {
        "notice": "Emitted when wallet is updated."
      }
    },
    "kind": "user",
    "methods": {
      "MINTER_ROLE()": {
        "notice": "Role definitions"
      },
      "addAdminRole(address)": {
        "notice": "Grants the admin role to an address."
      },
      "addMinterRole(address)": {
        "notice": "Grants the minter role to an address"
      },
      "addOperatorRole(address)": {
        "notice": "Grants the operator role to an address"
      },
      "addSmartContractRole(address)": {
        "notice": "Grants the smart contract role to an address"
      },
      "depositETH()": {
        "notice": "Deposits ETH to the contract."
      },
      "depositToken1(uint256)": {
        "notice": "Deposits first Token to the contract."
      },
      "depositToken2(uint256)": {
        "notice": "Deposits second Token to the contract."
      },
      "factory()": {
        "notice": "Uniswap V2 factory address."
      },
      "finalize()": {
        "notice": "Finalizes Token sale and launches LP."
      },
      "getLPBalance()": {
        "notice": "Returns LP Token balance."
      },
      "getLPTokenAddress()": {
        "notice": "Returns LP token address.."
      },
      "getLauncherInitData(address,address,address,address,uint256,uint256)": {
        "notice": "Collects data to initialize the auction and encodes them."
      },
      "getToken1Balance()": {
        "notice": "Gets the number of first token deposited into this contract."
      },
      "getToken2Balance()": {
        "notice": "Gets the number of second token deposited into this contract."
      },
      "hasAdminRole(address)": {
        "notice": "Used to check whether an address has the admin role."
      },
      "hasMinterRole(address)": {
        "notice": "Used to check whether an address has the minter role"
      },
      "hasOperatorRole(address)": {
        "notice": "Used to check whether an address has the operator role"
      },
      "hasSmartContractRole(address)": {
        "notice": "Used to check whether an address has the smart contract role"
      },
      "init(bytes)": {
        "notice": "Decodes and hands auction data to the initAuction function."
      },
      "initAccessControls(address)": {
        "notice": "Initializes access controls."
      },
      "initAuctionLauncher(address,address,address,address,uint256,uint256)": {
        "notice": "Initializes main contract variables (requires launchwindow to be more than 2 days.)"
      },
      "liquidityTemplate()": {
        "notice": "MISOLiquidity template id."
      },
      "market()": {
        "notice": "Token market contract address."
      },
      "marketConnected()": {
        "notice": "Checks if market wallet is set to this launcher"
      },
      "removeAdminRole(address)": {
        "notice": "Removes the admin role from an address."
      },
      "removeMinterRole(address)": {
        "notice": "Removes the minter role from an address"
      },
      "removeOperatorRole(address)": {
        "notice": "Removes the operator role from an address"
      },
      "removeSmartContractRole(address)": {
        "notice": "Removes the smart contract role from an address"
      },
      "setWallet(address)": {
        "notice": "Admin can set the wallet through this function."
      },
      "token1()": {
        "notice": "First Token address."
      },
      "token2()": {
        "notice": "Second Token address."
      },
      "tokenPair()": {
        "notice": "LP pair address."
      },
      "wallet()": {
        "notice": "Withdraw wallet address."
      },
      "withdrawDeposits()": {
        "notice": "Withraws deposited tokens and ETH from the contract to wallet."
      },
      "withdrawLPTokens()": {
        "notice": "Withdraws LPs from the contract."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 16920,
        "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)16916_storage)"
      },
      {
        "astId": 881,
        "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
        "label": "initAccess",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 18929,
        "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
        "label": "_status",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 12502,
        "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
        "label": "token1",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IERC20)27345"
      },
      {
        "astId": 12505,
        "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
        "label": "token2",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IERC20)27345"
      },
      {
        "astId": 12508,
        "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
        "label": "factory",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IUniswapV2Factory)23896"
      },
      {
        "astId": 12514,
        "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
        "label": "tokenPair",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 12517,
        "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
        "label": "wallet",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 12520,
        "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
        "label": "market",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(IMisoAuction)27465"
      },
      {
        "astId": 12533,
        "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
        "label": "launcherInfo",
        "offset": 0,
        "slot": "9",
        "type": "t_struct(LauncherInfo)12531_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)27345": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IMisoAuction)27465": {
        "encoding": "inplace",
        "label": "contract IMisoAuction",
        "numberOfBytes": "20"
      },
      "t_contract(IUniswapV2Factory)23896": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Factory",
        "numberOfBytes": "20"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)16916_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)16916_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(AddressSet)18610_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "members": [
          {
            "astId": 18609,
            "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)18345_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(LauncherInfo)12531_storage": {
        "encoding": "inplace",
        "label": "struct PostAuctionLauncher.LauncherInfo",
        "members": [
          {
            "astId": 12522,
            "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
            "label": "locktime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 12524,
            "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
            "label": "unlock",
            "offset": 4,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 12526,
            "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
            "label": "liquidityPercent",
            "offset": 12,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 12528,
            "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
            "label": "launched",
            "offset": 14,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 12530,
            "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
            "label": "liquidityAdded",
            "offset": 15,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(RoleData)16916_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 16913,
            "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(AddressSet)18610_storage"
          },
          {
            "astId": 16915,
            "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
            "label": "adminRole",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Set)18345_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 18340,
            "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 18344,
            "contract": "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}